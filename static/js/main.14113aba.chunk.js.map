{"version":3,"sources":["components/SearchBar.tsx","components/BookmarkEditor.tsx","components/BookmarkEntry.tsx","components/BookmarkBar.tsx","components/ToDoEntry.tsx","components/ToDoBox.tsx","components/TrelloSettings.tsx","utils/Formater.ts","components/TrelloCard.tsx","components/TrelloIntegration.tsx","components/GCalendarSettings.tsx","components/Clock.tsx","components/GCalendarIntegration.tsx","components/SearchEngineSettings.tsx","components/BackgroundSettings.tsx","components/ProjectInfo.tsx","components/BackgroundInfo.tsx","App.tsx","serviceWorker.js","index.js"],"names":["SearchBar","this","props","engineType","length","name","action","engineUrl","split","icon","id","className","autoFocus","placeholder","autoComplete","type","src","alt","Component","BookmarkEditor","handleNameChange","e","setState","target","value","handleURLChange","url","handleIconChange","handleDelete","onClose","state","handleSave","trim","startsWith","onSave","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","faTimes","onChange","defaultValue","onClick","closeButtonText","BookmarkEntry","handleEdit","entry","onUpdate","onDelete","data-toggle","title","href","data-target","faPen","BookmarkBar","editable","entries","Array","saveBookmarks","localStorage","setItem","JSON","stringify","handleEditToggle","handleBookmarkDelete","bookmark","a","filter","handleBookmarkUpdate","push","handleNewBookmark","Math","random","toString","substring","window","location","reload","getEntries","slice","bookmarks","map","key","getItem","parse","faCheck","faPlus","ToDoEntry","done","edit","newText","handleDone","finishEdit","onDoneToggle","toggleEditMode","handleEditSave","preventDefault","handleFormEscape","keyCode","text","onEdit","getTextComponent","onDoubleClick","onSubmit","onKeyUp","onFocus","select","getIcon","faSave","faCheckCircle","faCircle","faTrash","ToDoBox","loaded","saveTodoList","setupTooltip","handleInputKey","$","tooltip","setTimeout","handleDoneToggle","height","width","config","animationData","checked","loop","autoplay","todo","TrelloSettings","apiKey","loadedApiKey","loginState","handleKeyChange","componentDidMount","handleLogin","onReady","Trello","getTrelloClient","clientVersion","apiEndpoint","authEndpoint","intentEndpoint","authorizeName","authorizeType","authorizePersist","authorizeInteractive","authorizeScopeRead","authorizeScopeWrite","authorizeScopeAccount","authorizeExpiration","authorizeOnSuccess","authorizeOnError","console","log","autoAuthorize","authorizeButton","buttonStyle","buttonColor","buttonText","rel","withLeadingZeroes","number","size","str","formatDate","date","year","getFullYear","month","getMonth","day","getDate","TrelloLabelColors","green","yellow","orange","red","purple","blue","sky","lime","pink","black","TrelloCard","parseDate","dateString","Date","getDueDate","card","due","getChecklists","undefined","checklists","list","items","checkItems","completedItems","item","faCheckSquare","getLabels","labels","label","style","color","backgroundColor","shortUrl","data-placement","faShareSquare","TrelloIntegration","logged","trello","status","selectedList","selectedBoard","cards","boards","lists","saveHistory","loadBoards","get","res","loadLists","err","boardId","history","json","find","board","loadCards","listId","cardsPromise","idChecklists","checklistPromise","checklist","Promise","resolve","checklistRes","all","handleListChange","changeBy","index","indexOf","maxIndex","newIndex","handleListSelect","handleBoardSelect","getNavigator","aria-haspopup","aria-expanded","faAngleLeft","faAngleRight","showTrelloInfo","loader","handleReady","faCog","gapiconfig","clientId","GCalendarSettings","isSignedIn","isClientReady","initClient","gapi","client","init","discoveryDocs","scope","catch","auth2","getAuthInstance","updateSigninStatus","then","listen","onLoginStatusChange","getActionButton","signOut","signIn","require","script","document","createElement","onload","load","body","appendChild","Clock","timerId","setInterval","clearInterval","hours","pad","getHours","minutes","getMinutes","seconds","getSeconds","weekDays","GCalendarIntegration","events","selectedDate","colors","loadEvents","start","end","getTime","calendar","result","calendarList","calendarsRes","calendarId","timeMin","toISOString","timeMax","showDeleted","singleEvents","maxResults","orderBy","event","colorId","displayTime","eventStart","dateTime","eventEnd","promises","getStatus","handleLoginStatusChange","listEvents","eventsByDay","Map","forEach","when","has","set","sorted","from","sort","content","weekDay","getUTCDay","b","background","foreground","summary","SearchEngineSettings","saveEngine","handleChange","handleUrlChange","BackgroundSettings","author","authorUrl","night","ProjectInfo","BackgroundInfo","toggleBackground","faAdjust","backgroundAuthorUrl","backgroundAuthor","App","dayBackground","nightBackground","currentBackground","backgroundToggled","setBackground","getElementsByTagName","newBackground","checkBackground","now","saveBackgrounds","handleTrelloReady","handleSearchEngineSave","handleBackgroundSave","loadTrelloIntegration","configEncoded","as","faInfo","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14113aba.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/SearchBar.scss';\n\ninterface SearchBarProps {\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass SearchBar extends Component<SearchBarProps> {\n  render() {\n    if (this.props.engineType.length === 0) return null;\n\n    let name = '';\n    let action = '';\n\n    if (this.props.engineType === 'duckduckgo') {\n      name = 'DuckDuckGO';\n      action = 'https://duckduckgo.com';\n    }\n\n    if (this.props.engineType === 'google') {\n      name = 'Google';\n      action = 'https://google.com/search';\n    }\n\n    if (this.props.engineType === 'custom') {\n      name = this.props.engineUrl!.split('//')[1].split('/')[0];\n      action = this.props.engineUrl!;\n    }\n\n    const icon = `https://external-content.duckduckgo.com/ip3/${\n      action.split('://')[1].split('/')[0]\n    }.ico`;\n\n    return (\n      <form action={action} id=\"search-bar-container\" className=\"homepage-card\">\n        <input autoFocus name=\"q\" placeholder={`Search at ${name}`} autoComplete=\"off\" />\n        <button type=\"submit\">\n          <img src={icon} className=\"icon\" alt={`${name} icon`} />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\ninterface BookmarkEditorProps {\n  id: string;\n  onSave: Function;\n  name: string;\n  url: string;\n  icon: string;\n  closeButtonText: string;\n  onClose: Function;\n}\n\ninterface BookmarkEditorState {\n  name: string;\n  url: string;\n  icon: string;\n}\n\nclass BookmarkEditor extends Component<\n  BookmarkEditorProps,\n  BookmarkEditorState\n> {\n  componentDidMount() {\n    this.setState({\n      name: this.props.name,\n      url: this.props.url,\n      icon: this.props.icon,\n    });\n  }\n\n  handleNameChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ name: (e.target as any).value });\n  };\n\n  handleURLChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ url: (e.target as any).value });\n  };\n\n  handleIconChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ icon: (e.target as any).value });\n  };\n\n  handleDelete = () => {\n    this.props.onClose({ name: this.state.name, icon: this.state.icon });\n  };\n\n  handleSave = () => {\n    if (\n      this.state.name.trim().length === 0\n      || this.state.url.trim().length === 0\n    ) {\n      return;\n    }\n\n    let { url } = this.state;\n    if (!url.startsWith('http')) {\n      url = `https://${url}`;\n    }\n\n    this.props.onSave({ url, name: this.state.name, icon: this.state.icon });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id={this.props.id}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"bookmark-editor-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"bookmark-editor-modal-label\">\n                Bookmark editor\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"bookmark-settings-entry\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark name\"\n                  className=\"bookmark-entry-name\"\n                  onChange={this.handleNameChange}\n                  defaultValue={this.props.name}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark URL\"\n                  className=\"bookmark-entry-url\"\n                  onChange={this.handleURLChange}\n                  defaultValue={this.props.url}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark icon (leave empty to use the site favicon)\"\n                  className=\"bookmark-entry-icon\"\n                  onChange={this.handleIconChange}\n                  defaultValue={this.props.icon}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={this.handleDelete}\n              >\n                {this.props.closeButtonText}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEditor;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport BookmarkEditor from './BookmarkEditor';\n\ninterface BookmarkEntryProps {\n  id: string;\n  onUpdate: Function;\n  onDelete: Function;\n  url: string;\n  icon: string;\n  name: string;\n}\n\nclass BookmarkEntry extends Component<BookmarkEntryProps> {\n  handleEdit = () => {};\n\n  handleSave = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onUpdate(entry);\n  };\n\n  handleDelete = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onDelete(entry);\n  };\n\n  render() {\n    let { icon } = this.props;\n\n    if (icon === '') {\n      icon = `https://external-content.duckduckgo.com/ip3/${\n        this.props.url.split('://')[1].split('/')[0]\n      }.ico`;\n    }\n\n    return (\n      <div\n        className=\"bookmark-entry\"\n        data-toggle=\"tooltip\"\n        title={this.props.name}\n      >\n        <a href={this.props.url}>\n          <img src={icon} alt={`${this.props.name} icon`} />\n        </a>\n        <div\n          className=\"bookmark-edit\"\n          data-toggle=\"modal\"\n          data-target={`#bookmark-edit-modal-${this.props.id}`}\n        >\n          <FontAwesomeIcon icon={faPen} />\n        </div>\n        <BookmarkEditor\n          id={`bookmark-edit-modal-${this.props.id}`}\n          name={this.props.name}\n          url={this.props.url}\n          icon={this.props.icon}\n          closeButtonText=\"Delete\"\n          onSave={this.handleSave}\n          onClose={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEntry;\n","import React, { Component } from 'react';\nimport '../styles/BookmarkBar.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faPen, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport BookmarkEntry from './BookmarkEntry';\nimport BookmarkEditor from './BookmarkEditor';\n\ninterface BookmarkBarState {\n  editable: boolean;\n  entries: Array<any>;\n}\n\nclass BookmarkBar extends Component<any, BookmarkBarState> {\n  state = { editable: false, entries: new Array<any>() };\n\n  componentDidMount() {\n    const bookmarks = localStorage.getItem('bookmarks');\n    if (bookmarks !== null) {\n      const entries = JSON.parse(bookmarks);\n      this.setState({ entries });\n    } else {\n      this.saveBookmarks();\n    }\n  }\n\n  saveBookmarks = () => {\n    localStorage.setItem('bookmarks', JSON.stringify(this.state.entries));\n  };\n\n  handleEditToggle = () => {\n    this.setState({ editable: !this.state.editable });\n  };\n\n  handleBookmarkDelete = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleBookmarkUpdate = async (bookmark: any) => {\n    let { entries } = this.state;\n    entries = entries.filter((entry) => entry.id !== bookmark.id);\n    entries.push(bookmark);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleNewBookmark = (entry: any) => {\n    let id = '';\n    do {\n      id = Math.random()\n        .toString(36)\n        .substring(2, 12)\n        + Math.random()\n          .toString(36)\n          .substring(2, 12)\n        + Math.random()\n          .toString(36)\n          .substring(2, 12)\n        + Math.random()\n          .toString(36)\n          .substring(2, 12);\n    } while (\n      // eslint-disable-next-line\n      this.state.entries.filter(entry => entry.id === id).length !== 0\n    );\n    entry.id = id;\n\n    const { entries } = this.state;\n    entries.push(entry);\n    this.setState({ entries });\n    this.saveBookmarks();\n    window.location.reload();\n  };\n\n  getEntries = () => {\n    let { entries } = this.state;\n\n    if (entries.length > 14) {\n      entries = entries.slice(0, 15);\n    }\n\n    const bookmarks = entries.map((bookmark) => (\n      <BookmarkEntry\n        key={bookmark.id}\n        id={bookmark.id}\n        name={bookmark.name}\n        url={bookmark.url}\n        icon={bookmark.icon}\n        onUpdate={this.handleBookmarkUpdate}\n        onDelete={this.handleBookmarkDelete}\n      />\n    ));\n    if (entries.length > 14) {\n      return (\n        <>\n          {bookmarks}\n          <h4>...</h4>\n        </>\n      );\n    }\n    return bookmarks;\n  };\n\n  render() {\n    return (\n      <div id=\"bookmark-bar\" className=\"homepage-card\">\n        <div\n          className={`bookmark-list ${this.state.editable ? 'editable' : ''}`}\n        >\n          {this.getEntries()}\n        </div>\n        <div className=\"homepage-card-header\">\n          <div\n            id=\"bookmark-edit-toggle\"\n            className=\"homepage-card-settings-holder\"\n            onClick={this.handleEditToggle}\n            data-toggle=\"tooltip\"\n            title=\"Toggle bookmark edit mode\"\n          >\n            <FontAwesomeIcon\n              icon={this.state.editable ? faCheck : faPen}\n              className=\"homepage-card-settings\"\n            />\n          </div>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Add new bookmark\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#bookmark-add-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faPlus}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <BookmarkEditor\n          id=\"bookmark-add-modal\"\n          name=\"\"\n          url=\"\"\n          icon=\"\"\n          closeButtonText=\"Close\"\n          onSave={this.handleNewBookmark}\n          onClose={() => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkBar;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faCircle, faSave } from '@fortawesome/free-regular-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\ninterface ToDoEntryProps {\n  id: string;\n  text: string;\n  done: boolean;\n  onDelete: Function;\n  onDoneToggle: Function;\n  onEdit: Function;\n}\n\ninterface ToDoEntryState {\n  done: boolean;\n  edit: boolean;\n  newText: string;\n}\n\nclass ToDoEntry extends Component<ToDoEntryProps, ToDoEntryState> {\n  state = { done: false, edit: false, newText: '' };\n\n  componentDidMount() {\n    this.setState({ done: this.props.done });\n  }\n\n  handleDone = async () => {\n    if (this.state.edit) {\n      this.finishEdit();\n      return;\n    }\n    await this.setState({ done: !this.state.done });\n\n    this.props.onDoneToggle(this.props.id, this.state.done);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  };\n\n  toggleEditMode = () => {\n    this.setState({ edit: !this.state.edit });\n  }\n\n  handleEditSave = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.finishEdit();\n  }\n\n  handleFormEscape = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 27) this.toggleEditMode();\n  }\n\n  finishEdit = () => {\n    this.toggleEditMode();\n    let text = this.state.newText;\n    if (text.trim() === '') text = this.props.text;\n    this.props.onEdit(this.props.id, text);\n  }\n\n  getTextComponent = () => {\n    if (this.state.edit) {\n      return (\n        <div\n          className={\n            this.state.edit ? 'todo-entry-text edit' : 'todo-entry-text'\n          }\n          onDoubleClick={this.toggleEditMode}\n        >\n          <form onSubmit={this.handleEditSave} onKeyUp={this.handleFormEscape}>\n            <input\n              autoFocus\n              onChange={(e) => this.setState({ newText: e.target.value })}\n              onFocus={(e) => e.target.select()}\n              defaultValue={this.props.text}\n            />\n          </form>\n        </div>\n      );\n    }\n    return (\n      <div\n        className={\n            this.state.done ? 'todo-entry-text checked' : 'todo-entry-text'\n          }\n        onDoubleClick={this.toggleEditMode}\n      >\n        {this.props.text}\n      </div>\n    );\n  }\n\n  getIcon = () => {\n    if (this.state.edit) return faSave;\n    return this.state.done ? faCheckCircle : faCircle;\n  }\n\n  render() {\n    return (\n      <div className=\"todo-entry\">\n        <div className=\"todo-entry-holder\">\n          <div\n            className=\"todo-checkbox\"\n            data-toggle=\"tooltip\"\n            title=\"Toggle done state\"\n            onClick={this.handleDone}\n          >\n            <FontAwesomeIcon\n              className={\n                this.state.done && !this.state.edit ? 'icon-checked' : ''\n              }\n              icon={this.getIcon()}\n            />\n          </div>\n          {this.getTextComponent()}\n        </div>\n        <div className=\"todo-entry-actions\">\n          <div\n            className=\"todo-entry-action\"\n            data-toggle=\"tooltip\"\n            title=\"Delete entry\"\n            onClick={this.handleDelete}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoEntry;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport FadeIn from 'react-fade-in';\nimport { Lottie } from '@crello/react-lottie';\nimport checked from '../assets/checked.json';\nimport ToDoEntry from './ToDoEntry';\nimport '../styles/ToDoBox.scss';\n\ninterface ToDoEntryState {\n  text: string;\n  done: boolean;\n  id: string;\n}\n\ninterface ToDoBoxProps {\n  setupTooltip: Function;\n}\n\ninterface ToDoBoxState {\n  entries: Array<ToDoEntryState>;\n  loaded: boolean;\n}\n\nclass ToDoBox extends Component<ToDoBoxProps, ToDoBoxState> {\n  state = { entries: new Array<ToDoEntryState>(), loaded: false };\n\n  componentDidMount() {\n    const todo = localStorage.getItem('todo-list');\n    if (todo !== null) {\n      const entries = JSON.parse(todo);\n      this.setState({ entries, loaded: true });\n    } else {\n      this.setState({ loaded: true });\n      this.saveTodoList();\n    }\n  }\n\n  saveTodoList = () => {\n    localStorage.setItem('todo-list', JSON.stringify(this.state.entries));\n    this.props.setupTooltip();\n  };\n\n  handleInputKey = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (e.keyCode === 13) {\n      const value = (e.target as any).value as string;\n\n      if (value.trim().length === 0) {\n        return;\n      }\n\n      let id = '';\n\n      do {\n        id = Math.random()\n          .toString(36)\n          .substring(2, 12)\n          + Math.random()\n            .toString(36)\n            .substring(2, 12)\n          + Math.random()\n            .toString(36)\n            .substring(2, 12)\n          + Math.random()\n            .toString(36)\n            .substring(2, 12);\n      } while (\n        // eslint-disable-next-line\n        this.state.entries.filter(entry => entry.id === id).length !== 0\n      );\n\n      const { entries } = this.state;\n      entries.push({ text: value, done: false, id });\n      this.setState({ entries });\n      this.saveTodoList();\n      (e.target as any).value = '';\n    }\n  };\n\n  handleDelete = (id: string) => {\n    $(() => {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip('dispose');\n    });\n    setTimeout(async () => {\n      let { entries } = this.state;\n      entries = entries.filter((value) => value.id !== id);\n      await this.setState({ entries });\n      this.saveTodoList();\n    }, 200);\n  };\n\n  handleDoneToggle = async (id: string, done: boolean) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      if (value.id === id) value.done = done;\n\n      return value;\n    });\n    await this.setState({ entries });\n    this.saveTodoList();\n  };\n\n  handleEdit = async (id: string, newText: string) => {\n    let { entries } = this.state;\n    entries = entries.map((value) => {\n      if (value.id === id) value.text = newText;\n\n      return value;\n    });\n    await this.setState({ entries });\n    this.saveTodoList();\n  }\n\n  getEntries = () => {\n    if (!this.state.loaded) return null;\n    if (this.state.entries.length === 0) {\n      return (\n        <div className=\"d-flex flex-column  align-items-center\">\n          <FadeIn className=\"trello-status-container\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{\n                animationData: checked,\n                loop: false,\n                autoplay: true,\n              }}\n            />\n            <h5 className=\"trello-status-text\">It's empty!</h5>\n          </FadeIn>\n        </div>\n      );\n    }\n\n    return this.state.entries.map((entry) => (\n      <ToDoEntry\n        onDelete={this.handleDelete}\n        onDoneToggle={this.handleDoneToggle}\n        onEdit={this.handleEdit}\n        text={entry.text}\n        done={entry.done}\n        id={entry.id}\n        key={entry.id}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"todo-box\" className=\"homepage-card\">\n        <h4>To Do:</h4>\n        <input\n          id=\"todo-new-entry\"\n          className=\"\"\n          type=\"text\"\n          placeholder=\"Add new things to your To Do\"\n          autoComplete=\"off\"\n          onKeyUp={this.handleInputKey}\n        />\n        <div>{this.getEntries()}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoBox;\n","import React, { Component } from 'react';\nimport '../styles/TrelloSettings.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport TrelloClient, { Trello } from 'react-trello-client';\n\ninterface TrelloSettingsProps {\n  apiKey: string;\n  onSave: Function;\n  onReady: Function;\n}\n\ninterface TrelloSettingsState {\n  apiKey: string;\n  loadedApiKey: string;\n  /*\n  -2 = No Key\n  -1 = Key ok, no Token\n  0 = Nothing yet\n  1 = Key and Token OK, nedding Client Start\n  2 = Key, Token and Client OK\n  */\n  loginState: number;\n}\n\nclass TrelloSettings extends Component<\n  TrelloSettingsProps,\n  TrelloSettingsState\n> {\n  state = {\n    apiKey: '',\n    loadedApiKey: '',\n    loginState: 0,\n  };\n\n  handleSave = () => {\n    let loginState = 0;\n\n    if (this.state.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem('trello_token') === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    this.setState({ loadedApiKey: this.state.apiKey, loginState });\n    this.props.onSave(this.state.apiKey);\n  };\n\n  handleKeyChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ apiKey: (e.target as any).value });\n  };\n\n  componentDidMount = async () => {\n    let loginState = 0;\n\n    if (this.props.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else if (localStorage.getItem('trello_token') === null) {\n      loginState = -1;\n    } else {\n      loginState = 1;\n    }\n\n    await this.setState({\n      loginState,\n      apiKey: this.props.apiKey,\n      loadedApiKey: this.props.apiKey,\n    });\n  };\n\n  handleLogin = () => {\n    this.props.onReady(Trello);\n  };\n\n  getTrelloClient = () => {\n    if (this.state.loginState === -2 || this.state.loginState === 0) return null;\n    return (\n      <TrelloClient\n        apiKey={this.state.loadedApiKey} // Get the API key from https://trello.com/app-key/\n        clientVersion={1} // number: {1}, {2}, {3}\n        apiEndpoint=\"https://api.trello.com\" // string: \"https://api.trello.com\"\n        authEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        intentEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        authorizeName=\"Homepage\" // string: \"React Trello Client\"\n        authorizeType=\"popup\" // string: popup | redirect\n        authorizePersist\n        authorizeInteractive\n        authorizeScopeRead // boolean: {true} | {false}\n        authorizeScopeWrite // boolean: {true} | {false}\n        authorizeScopeAccount // boolean: {true} | {false}\n        authorizeExpiration=\"never\" // string: \"1hour\", \"1day\", \"30days\" | \"never\"\n        authorizeOnSuccess={this.handleLogin} // function: {() => console.log('Login successful!')}\n        authorizeOnError={() => console.log('Login error!')} // function: {() => console.log('Login error!')}\n        autoAuthorize // boolean: {true} | {false}\n        authorizeButton // boolean: {true} | {false}\n        buttonStyle=\"metamorph\" // string: \"metamorph\" | \"flat\"\n        buttonColor=\"green\" // string: \"green\" | \"grayish-blue\" | \"light\"\n        buttonText=\"Login with Trello\" // string: \"Login with Trello\"\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"trello-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"trello-setings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"trello-settings-modal-label\">\n                Trello settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <label>\n                Login into your Trello Account and get an API key in\n                {' '}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://trello.com/app-key\"\n                >\n                  https://trello.com/app-key\n                </a>\n                . Then add the homepage URL to the Allowed Origins.\n              </label>\n              <input\n                defaultValue={this.state.apiKey}\n                onChange={this.handleKeyChange}\n                placeholder=\"API key (insert a value and save before login)\"\n              />\n              <div\n                id=\"trello-login-container\"\n                className={this.state.loginState !== -1 ? 'hidden' : ''}\n              >\n                {this.getTrelloClient()}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={() => window.location.reload()}\n              >\n                Close\n              </button>\n              <button\n                onClick={this.handleSave}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrelloSettings;\n","export function withLeadingZeroes(number: number, size: number): string {\n  let str = number.toString();\n  while (str.length < size) str = `0${str}`;\n  return str;\n}\n\nexport function formatDate(date: Date) {\n  const year = date.getFullYear();\n  const month = withLeadingZeroes(date.getMonth() + 1, 2);\n  const day = withLeadingZeroes(date.getDate(), 2);\n  return `${year}-${month}-${day}`;\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShareSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { formatDate } from '../utils/Formater';\n\nconst TrelloLabelColors = {\n  green: '#59C059',\n  yellow: '#C0C059',\n  orange: '#C08C59',\n  red: '#C05959',\n  purple: '#8C59C0',\n  blue: '#597BC0',\n  sky: '#59C0C0',\n  lime: '#8CC059',\n  pink: '#C0598C',\n  black: '#344563',\n};\n\ninterface TrelloCardProps {\n  card: any;\n}\n\nclass TrelloCard extends Component<TrelloCardProps> {\n  parseDate = (dateString: string) => {\n    const date = new Date(Date.parse(dateString));\n    return formatDate(date);\n  };\n\n  getDueDate = (card: any) => {\n    if (card.due === null) return null;\n\n    return <div className=\"trello-card-due\">{this.parseDate(card.due)}</div>;\n  };\n\n  getChecklists = (card: any) => {\n    if (card.checklists === undefined) return null;\n\n    return (\n      <div className=\"trello-card-checklists\">\n        {card.checklists.map((list: any) => {\n          const items = list.checkItems;\n          const completedItems = items.filter(\n            (item: any) => item.state === 'complete',\n          );\n          return (\n            <div\n              key={list.id}\n              className={`trello-card-checklist ${\n                items.length === completedItems.length ? 'completed' : ''\n              }`}\n            >\n              <FontAwesomeIcon className=\"icon\" icon={faCheckSquare} />\n              {`${completedItems.length}/${items.length}`}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  getLabels = (card: any) => {\n    const labels = card.labels as Array<any>;\n    if (labels.length === 0) return null;\n\n    return (\n      <div className=\"trello-card-labels\">\n        {labels.map((label) => (\n          <div\n            key={label.id}\n            className=\"trello-card-label\"\n            style={{\n              color: 'white',\n              backgroundColor: (TrelloLabelColors as any)[label.color],\n            }}\n          >\n            {label.name}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const { card } = this.props;\n    return (\n      <div className=\"trello-card\">\n        {this.getLabels(card)}\n        <div className=\"trello-card-content\">\n          <div className=\"trello-card-name\">{card.name}</div>\n          <div className=\"trello-card-actions\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={card.shortUrl}\n              className=\"trello-card-action-anchor\"\n              data-toggle=\"tooltip\"\n              data-placement=\"left\"\n              title=\"Open card on Trello\"\n            >\n              <div className=\"trello-card-action\">\n                <FontAwesomeIcon icon={faShareSquare} />\n              </div>\n            </a>\n          </div>\n        </div>\n        {this.getDueDate(card)}\n        {this.getChecklists(card)}\n      </div>\n    );\n  }\n}\n\nexport default TrelloCard;\n","import React, { Component } from 'react';\nimport {\n  faCog,\n  faTimes,\n  faAngleLeft,\n  faAngleRight,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FadeIn from 'react-fade-in';\nimport { Lottie } from '@crello/react-lottie';\nimport TrelloSettings from './TrelloSettings';\nimport TrelloCard from './TrelloCard';\nimport loader from '../assets/loader.json';\nimport checked from '../assets/checked.json';\nimport '../styles/TrelloIntegration.scss';\n\ninterface TrelloIntegrationProps {\n  apiKey: string;\n  onReady: Function;\n}\n\ninterface TrelloIntegrationState {\n  logged: boolean;\n  trello: any;\n  cards?: Array<any>;\n  boards: Array<any>;\n  lists: Array<any>;\n  selectedList: any;\n  selectedBoard: any;\n  /*\n  -1 = refreshing\n  0 = loading\n  1 = done\n  */\n  status: number;\n}\n\nclass TrelloIntegration extends Component<\n  TrelloIntegrationProps,\n  TrelloIntegrationState\n> {\n  state = {\n    logged: false,\n    trello: {} as any,\n    status: 0,\n    selectedList: {} as any,\n    selectedBoard: {} as any,\n    cards: new Array<any>(),\n    boards: new Array<any>(),\n    lists: new Array<any>(),\n  };\n\n  saveHistory = () => {\n    localStorage.setItem(\n      'trello-history',\n      JSON.stringify({\n        selectedList: this.state.selectedList.id,\n        selectedBoard: this.state.selectedBoard.id,\n      }),\n    );\n  };\n\n  loadBoards = async (trello: any) => {\n    trello.get(\n      'members/me/boards',\n      async (res: any) => {\n        console.log('get boards');\n        await this.setState({ boards: res });\n        this.loadLists(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      },\n    );\n  };\n\n  loadLists = (trello: any) => {\n    let boardId = this.state.selectedBoard.id;\n    if (boardId === undefined) {\n      const history = localStorage.getItem('trello-history');\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedBoard === undefined) {\n          boardId = this.state.boards[0].id;\n          this.setState({ selectedBoard: this.state.boards[0] });\n        } else {\n          boardId = json.selectedBoard;\n          this.setState({\n            selectedBoard: this.state.boards.find(\n              (board) => board.id === json.selectedBoard,\n            ),\n          });\n        }\n      } else {\n        boardId = this.state.boards[0].id;\n        this.setState({ selectedBoard: this.state.boards[0] });\n      }\n    }\n    trello.get(\n      `boards/${boardId}/lists`,\n      async (res: any) => {\n        console.log('get lists');\n        await this.setState({ lists: res });\n        this.loadCards(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      },\n    );\n  };\n\n  loadCards = (trello: any) => {\n    let listId = this.state.selectedList.id;\n    if (listId === undefined) {\n      const history = localStorage.getItem('trello-history');\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedList === undefined) {\n          listId = this.state.lists[0].id;\n          this.setState({ selectedList: this.state.lists[0] });\n        } else {\n          listId = json.selectedList;\n          this.setState({\n            selectedList: this.state.lists.find(\n              (list) => list.id === json.selectedList,\n            ),\n          });\n        }\n      } else {\n        listId = this.state.lists[0].id;\n        this.setState({ selectedList: this.state.lists[0] });\n      }\n    }\n    trello.get(\n      `lists/${listId}/cards`,\n      async (res: any) => {\n        console.log('get cards');\n        const cardsPromise = res.map(async (card: any) => {\n          if (card.idChecklists.length === 0) return card;\n\n          console.log('get checklists');\n          const checklistPromise = card.idChecklists.map(\n            async (checklist: any) => new Promise((resolve) => {\n              trello.get(\n                `checklists/${checklist}`,\n                (checklistRes: any) => resolve(checklistRes),\n                () => {\n                  resolve(undefined);\n                },\n              );\n            }),\n          );\n\n          const checklists = await Promise.all(checklistPromise);\n          card.checklists = checklists;\n          return card;\n        });\n        const cards = await Promise.all(cardsPromise);\n        this.setState({ cards, status: 1 });\n        this.props.onReady();\n      },\n      (err: any) => {\n        console.log('ERROR:', err);\n        this.setState({ cards: undefined, status: 1 });\n        this.props.onReady();\n      },\n    );\n  };\n\n  handleListChange = async (changeBy: number) => {\n    const index = this.state.lists.indexOf(this.state.selectedList);\n    const maxIndex = this.state.lists.length - 1;\n    let newIndex = index + changeBy;\n    if (newIndex <= -1) newIndex = maxIndex;\n    if (newIndex > maxIndex) newIndex = 0;\n\n    await this.setState({\n      selectedList: this.state.lists[newIndex],\n      status: 0,\n    });\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleListSelect = async (id: string) => {\n    await this.setState({\n      selectedList: this.state.lists.find((list) => list.id === id),\n      status: -1,\n    });\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleBoardSelect = async (id: string) => {\n    await this.setState({\n      selectedBoard: this.state.boards.find((board) => board.id === id),\n      selectedList: {} as any,\n      status: -1,\n    });\n    this.loadBoards(this.state.trello);\n    this.saveHistory();\n  };\n\n  getNavigator = () => (\n    <>\n      <div className=\"trello-board-navigator trello-navigator\">\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-boards-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h6 className=\"text-center\">{this.state.selectedBoard.name}</h6>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-boards-dropdown\"\n          >\n            {this.state.boards.map((board) => (\n              <div\n                onClick={() => this.handleBoardSelect(board.id)}\n                key={board.id}\n                className=\"dropdown-item\"\n              >\n                {board.name}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"trello-list-navigator trello-navigator\">\n        <div onClick={() => this.handleListChange(-1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </div>\n        <div className=\"dropdown\">\n          <button\n            className=\"trello-dropdown-button\"\n            type=\"button\"\n            id=\"trello-lists-dropdown\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <h3 className=\"text-center\">{this.state.selectedList.name}</h3>\n          </button>\n          <div\n            className=\"dropdown-menu\"\n            aria-labelledby=\"trello-lists-dropdown\"\n          >\n            {this.state.lists.map((list) => (\n              <div\n                onClick={() => this.handleListSelect(list.id)}\n                key={list.id}\n                className=\"dropdown-item\"\n              >\n                {list.name}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div onClick={() => this.handleListChange(+1)} className=\"icon\">\n          <FontAwesomeIcon icon={faAngleRight} />\n        </div>\n      </div>\n    </>\n  );\n\n  showTrelloInfo = () => {\n    if (this.props.apiKey.trim().length === 0) return <h4>Configure Trello to sync your cards</h4>;\n\n    if (this.state.logged && this.state.status === 1) {\n      if (this.state.cards === undefined) {\n        return (\n          <div className=\"d-flex flex-column align-items-center\">\n            <FadeIn className=\"trello-status-container\">\n              <FontAwesomeIcon icon={faTimes} className=\"trello-status error\" />\n              <h5 className=\"trello-status-text\">\n                Cannot get Trello.\n                <br />\n                Check the config\n              </h5>\n            </FadeIn>\n          </div>\n        );\n      }\n\n      if (this.state.cards.length === 0) {\n        return (\n          <>\n            {this.getNavigator()}\n            <div className=\"d-flex flex-column  align-items-center\">\n              <FadeIn className=\"trello-status-container\">\n                <Lottie\n                  height=\"120px\"\n                  width=\"120px\"\n                  config={{\n                    animationData: checked,\n                    loop: false,\n                    autoplay: true,\n                  }}\n                />\n                <h5 className=\"trello-status-text\">It's empty!</h5>\n              </FadeIn>\n            </div>\n          </>\n        );\n      }\n\n      return (\n        <>\n          {this.getNavigator()}\n          <div id=\"trello-cards-container\">\n            {this.state.cards.map((card) => (\n              <FadeIn key={card.id}>\n                <TrelloCard card={card} />\n              </FadeIn>\n            ))}\n          </div>\n        </>\n      );\n    }\n    return (\n      <FadeIn>\n        <div className=\"d-flex flex-column  align-items-center\">\n          <Lottie\n            height=\"120px\"\n            width=\"120px\"\n            config={{ animationData: loader, loop: true, autoplay: true }}\n          />\n          <h5 className=\"trello-status-text\">Fetching Trello...</h5>\n        </div>\n      </FadeIn>\n    );\n  };\n\n  handleSave = (apiKey: string) => {\n    localStorage.setItem(\n      'trello-config',\n      JSON.stringify({ apiKey: apiKey.trim() }),\n    );\n  };\n\n  handleReady = (trello: any) => {\n    if (this.state.logged) return;\n    this.loadBoards(trello);\n    this.setState({ logged: true, trello });\n  };\n\n  render() {\n    return (\n      <div id=\"homepage-trello\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Trello:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Trello\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#trello-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <TrelloSettings\n          apiKey={this.props.apiKey}\n          onSave={this.handleSave}\n          onReady={this.handleReady}\n        />\n        {this.showTrelloInfo()}\n      </div>\n    );\n  }\n}\n\nexport default TrelloIntegration;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst gapiconfig = { apiKey: '', clientId: '' };\n\nexport interface GCalendarSettingsProps {\n  onLoginStatusChange: Function;\n}\n\nexport interface GCalendarSettingsState {\n  isSignedIn?: boolean;\n  isClientReady: boolean;\n}\n\nclass GCalendarSettings extends Component<\n  GCalendarSettingsProps,\n  GCalendarSettingsState\n> {\n  state = {\n    isSignedIn: undefined,\n    isClientReady: false,\n  };\n\n  async componentDidMount() {\n    try {\n      const config = require('../config/gapi.json');\n      if (config !== undefined) {\n        gapiconfig.clientId = config.clientId;\n        gapiconfig.apiKey = config.apiKey;\n      }\n    } catch (e) {\n      console.log('Cannot find credentials file at src/config/gapi.json');\n    }\n\n    const script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n\n    script.onload = () => {\n      const { gapi } = window as any;\n      gapi.load('client:auth2', this.initClient);\n    };\n\n    document.body.appendChild(script);\n  }\n\n  initClient = () => {\n    const { gapi } = window as any;\n\n    gapi.client\n      .init({\n        apiKey: gapiconfig.apiKey,\n        clientId: gapiconfig.clientId,\n        discoveryDocs: [\n          'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest',\n        ],\n        scope: 'https://www.googleapis.com/auth/calendar.readonly',\n      })\n      .catch(() => {\n        console.log('Cannot init the Calendar client.');\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n        }\n      })\n      .then(() => {\n        console.log('Calendar client loaded');\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n          return;\n        }\n\n        this.setState({ isClientReady: true });\n\n        gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n\n        this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n      });\n  };\n\n  updateSigninStatus = (isSignedIn: boolean) => {\n    console.log('The login status was chagned to', isSignedIn);\n    this.setState({ isSignedIn });\n    this.props.onLoginStatusChange(isSignedIn);\n  };\n\n  getActionButton = (gapi: any) => {\n    if (gapiconfig.clientId === '' || gapiconfig.apiKey === '') return 'No credentials provided (see ./config/gapi.json)';\n    if (!this.state.isClientReady) return null;\n    if (this.state.isSignedIn) {\n      return (\n        <button\n          onClick={() => gapi.auth2.getAuthInstance().signOut()}\n          className=\"btn btn-secondary\"\n        >\n          Sign out\n        </button>\n      );\n    }\n    return (\n      <button\n        onClick={() => gapi.auth2.getAuthInstance().signIn()}\n        className=\"btn btn-primary\"\n      >\n        Sign in with Google Account\n      </button>\n    );\n  };\n\n  render() {\n    if (this.state.isSignedIn === undefined) return null;\n\n    const { gapi } = window as any;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"gcalendar-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"gcalendar-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"gcalendar-settings-modal-label\">\n                Google Calendar settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n                {' '}\n              </button>\n            </div>\n            <div className=\"modal-body\">{this.getActionButton(gapi)}</div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={() => window.location.reload()}\n              >\n                Close\n              </button>\n              <button type=\"button\" className=\"btn btn-primary\">\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GCalendarSettings;\n","import React, { Component } from 'react';\nimport { formatDate, withLeadingZeroes as pad } from '../utils/Formater';\n\ninterface ClockState {\n  date: Date;\n}\n\nclass Clock extends Component<any, ClockState> {\n  state = { date: new Date() };\n\n  timerId?: any;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => this.setState({ date: new Date() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const hours = pad(date.getHours(), 2);\n    const minutes = pad(date.getMinutes(), 2);\n    const seconds = pad(date.getSeconds(), 2);\n    return (\n      <>\n        <h6 id=\"calendar-today\">{formatDate(date)}</h6>\n        <h3 id=\"calendar-clock\">{`${hours}:${minutes}:${seconds}`}</h3>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport FadeIn from 'react-fade-in';\nimport { Lottie } from '@crello/react-lottie';\nimport GCalendarSettings from './GCalendarSettings';\nimport Clock from './Clock';\nimport loader from '../assets/loader.json';\nimport '../styles/CalendarIntegration.scss';\n\ninterface GCalendarIntegrationState {\n  /*\n  -1 = not logged\n  0 = loading\n  1 = logged\n  */\n  loginState: number;\n  events: Array<any>;\n  selectedDate: Date;\n}\n\nconst weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nclass GCalendarIntegration extends Component<any, GCalendarIntegrationState> {\n  state = { loginState: 0, events: new Array<any>(), selectedDate: new Date() };\n\n  colors: any = {};\n\n  loadEvents = async (start: Date) => {\n    const { gapi } = window as any;\n\n    const end = new Date(start.getTime() + 30 * 24 * 60 * 60 * 1000);\n\n    const events = new Array<any>();\n\n    // resolve colors\n    this.colors = (await gapi.client.calendar.colors.get()).result.calendar;\n\n    // resolve the calendars\n    const calendarsRes = await gapi.client.calendar.calendarList.list();\n    // resolve the events for each calendar\n    const promises = await (calendarsRes.result.items as Array<any>).map(\n      async (calendar) => {\n        const res = await gapi.client.calendar.events.list({\n          calendarId: calendar.id,\n          timeMin: start.toISOString(),\n          timeMax: end.toISOString(),\n          showDeleted: false,\n          singleEvents: true,\n          maxResults: 50,\n          orderBy: 'startTime',\n        });\n        events.push(\n          ...res.result.items.map((event: any) => {\n            event.calendar = calendar;\n            event.colorId = calendar.colorId;\n            let displayTime = 'All day';\n            if (event.start.date === undefined) {\n              const eventStart = event.start.dateTime.split('T')[1].substring(0, 5);\n              const eventEnd = event.end.dateTime.split('T')[1].substring(0, 5);\n              displayTime = `${eventStart} - ${eventEnd}`;\n            }\n            event.displayTime = displayTime;\n            return event;\n          }),\n        );\n      },\n    );\n\n    await Promise.all(promises);\n\n    await this.setState({ events });\n  };\n\n  getStatus = () => {\n    if (this.state.loginState === -1) return <h4>Configure Google Calendar to see future events</h4>;\n    return null;\n  };\n\n  handleLoginStatusChange = async (isSignedIn: boolean) => {\n    if (isSignedIn) {\n      await this.loadEvents(new Date());\n    }\n    this.setState({ loginState: isSignedIn ? 1 : -1 });\n  };\n\n  listEvents = () => {\n    if (this.state.loginState === -1) return null;\n    if (this.state.loginState === 0) {\n      return (\n        <FadeIn>\n          <div className=\"d-flex flex-column  align-items-center\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{ animationData: loader, loop: true, autoplay: true }}\n            />\n            <h5 className=\"trello-status-text\">Fetching Google Calendar...</h5>\n          </div>\n        </FadeIn>\n      );\n    }\n\n    const eventsByDay = new Map<string, Array<any>>();\n\n    this.state.events.forEach((event) => {\n      let when = event.start.date;\n      if (when === undefined) when = event.start.dateTime.split('T')[0];\n\n      let events = new Array<any>();\n      if (eventsByDay.has(when)) {\n        events = eventsByDay.get(when)!;\n      }\n      events.push(event);\n      eventsByDay.set(when, events);\n    });\n\n    // sort days\n    const sorted = Array.from(eventsByDay.entries()).sort();\n\n    const content = new Array<any>();\n    content.push(<h5 key=\"header\">Future events:</h5>);\n\n    sorted.forEach((entry: Array<any>) => {\n      const when = entry[0] as string;\n      const weekDay = weekDays[new Date(when).getUTCDay()];\n      let events = entry[1] as Array<any>;\n\n      // sort events\n      events = events.sort((a, b) => {\n        if (a.displayTime === 'All day') return -1;\n        if (b.displayTime === 'All day') return 1;\n\n        if (a.displayTime < b.displayTime) return -1;\n        if (a.displayTime > b.displayTime) return 1;\n        return 0;\n      });\n\n      content.push(\n        <FadeIn key={when}>\n          <div className=\"gcalendar-events\">\n            <h6>{`${when} - ${weekDay}`}</h6>\n            {events.map((event) => {\n              const color = this.colors[event.colorId];\n              return (\n                <div\n                  key={event.id}\n                  style={{\n                    backgroundColor: color.background,\n                    color: color.foreground,\n                  }}\n                >\n                  {`${event.displayTime}: ${event.summary}`}\n                </div>\n              );\n            })}\n          </div>\n        </FadeIn>,\n      );\n    });\n\n    return content;\n  };\n\n  render() {\n    return (\n      <div id=\"calendar-container\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Calendar:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Google Calendar\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#gcalendar-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <Clock />\n        {this.getStatus()}\n        {this.listEvents()}\n        <GCalendarSettings onLoginStatusChange={this.handleLoginStatusChange} />\n      </div>\n    );\n  }\n}\n\nexport default GCalendarIntegration;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/SearchEngineSettings.scss';\n\ninterface SearchEngineSettingsProps {\n  onSave: Function;\n}\n\ninterface SearchEngineSettingsState {\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass SearchEngineSettings extends Component<\n  SearchEngineSettingsProps,\n  SearchEngineSettingsState\n> {\n  state = { engineType: '', engineUrl: '' };\n\n  async componentDidMount() {\n    const config = localStorage.getItem('search-engine');\n    if (config === null) {\n      await this.setState({ engineType: 'duckduckgo' });\n      this.saveEngine();\n    } else {\n      const json = JSON.parse(config);\n      await this.setState({\n        engineType: json.engineType,\n        engineUrl: json.engineUrl,\n      });\n    }\n    this.props.onSave(this.state);\n  }\n\n  saveEngine = () => {\n    localStorage.setItem('search-engine', JSON.stringify(this.state));\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineType: (e.target as any).value! });\n  };\n\n  handleUrlChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineUrl: (e.target as any).value! });\n  };\n\n  handleSave = async () => {\n    if (\n      !this.state.engineUrl.startsWith('https://')\n      && !this.state.engineUrl.startsWith('http://')\n    ) {\n      await this.setState({ engineUrl: `https://${this.state.engineUrl}` });\n    }\n    await this.saveEngine();\n    this.props.onSave(this.state);\n  };\n\n  render() {\n    if (this.state.engineType.length === 0) return null;\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"homepage-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"homepage-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"homepage-settings-modal-label\">\n                General settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div>\n                <label>Search engine</label>\n                <select\n                  id=\"search-engine\"\n                  onChange={this.handleChange}\n                  defaultValue={this.state.engineType}\n                >\n                  <option value=\"duckduckgo\">DuckDuckGO</option>\n                  <option value=\"google\">Google</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n                <input\n                  placeholder=\"Insert custom search engine URL\"\n                  defaultValue={this.state.engineUrl}\n                  onChange={this.handleUrlChange}\n                  className={`${\n                    this.state.engineType === 'custom' ? '' : 'hidden'\n                  }`}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchEngineSettings;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\ninterface BackgroundSettingsProps {\n  onSave: Function;\n  day: any;\n  night: any;\n}\n\nclass BackgroundSettings extends Component<BackgroundSettingsProps> {\n  state = {\n    'day-url': '',\n    'day-author': '',\n    'day-authorUrl': '',\n    'night-url': '',\n    'night-author': '',\n    'night-authorUrl': '',\n  };\n\n  componentDidMount() {\n    this.setState({\n      'day-url': this.props.day.url,\n      'day-author': this.props.day.author,\n      'day-authorUrl': this.props.day.authorUrl,\n      'night-url': this.props.night.url,\n      'night-author': this.props.night.author,\n      'night-authorUrl': this.props.night.authorUrl,\n    });\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    const { name } = e.target as any;\n    const { value } = e.target as any;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSave = () => {\n    this.props.onSave(\n      {\n        url: this.state['day-url'],\n        author: this.state['day-author'],\n        authorUrl: this.state['day-authorUrl'],\n      },\n      {\n        url: this.state['night-url'],\n        author: this.state['night-author'],\n        authorUrl: this.state['night-authorUrl'],\n      },\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"background-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"background-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"background-settings-modal-label\">\n                Background settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <label>Day background</label>\n              <input\n                name=\"day-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state['day-url']}\n              />\n              <input\n                name=\"day-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state['day-author']}\n              />\n              <input\n                name=\"day-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state['day-authorUrl']}\n              />\n              <label>Night background</label>\n              <input\n                name=\"night-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state['night-url']}\n              />\n              <input\n                name=\"night-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state['night-author']}\n              />\n              <input\n                name=\"night-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state['night-authorUrl']}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundSettings;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\n\nclass ProjectInfo extends Component {\n  render() {\n    return (\n      <div className=\"footer-info\">\n        <div data-toggle=\"tooltip\" title=\"Open general settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#homepage-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n        Homepage made by\n        {' '}\n        <a\n          href=\"https://github.com/Pauloo27/homepage\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Pauloo27\n        </a>\n        {' '}\n        under GPL-2 license\n      </div>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faAdjust } from '@fortawesome/free-solid-svg-icons';\n\ninterface BackgroundInfoProps {\n  backgroundAuthor: string;\n  backgroundAuthorUrl: string;\n  toggleBackground: Function;\n}\n\nclass BackgroundInfo extends Component<BackgroundInfoProps> {\n  render() {\n    return (\n      <div id=\"background-info\" className=\"footer-info\">\n        <div\n          data-toggle=\"tooltip\"\n          title=\"Toggle background\"\n          onClick={() => this.props.toggleBackground()}\n          className=\"homepage-toggle-background\"\n        >\n          <div>\n            <FontAwesomeIcon icon={faAdjust} />\n          </div>\n        </div>\n        Image by\n        {' '}\n        <a\n          href={this.props.backgroundAuthorUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {this.props.backgroundAuthor}\n        </a>\n        <div data-toggle=\"tooltip\" title=\"Open background settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#background-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundInfo;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SearchBar from './components/SearchBar';\nimport BookmarkBar from './components/BookmarkBar';\nimport ToDoBox from './components/ToDoBox';\nimport TrelloIntegration from './components/TrelloIntegration';\nimport GCalendarIntegration from './components/GCalendarIntegration';\nimport SearchEngineSettings from './components/SearchEngineSettings';\nimport BackgroundSettings from './components/BackgroundSettings';\nimport ProjectInfo from './components/ProjectInfo';\nimport BackgroundInfo from './components/BackgroundInfo';\nimport './styles/App.scss';\n\ninterface Background {\n  url: string;\n  author: string;\n  authorUrl: string;\n}\n\ninterface AppState {\n  dayBackground: Background;\n  nightBackground: Background;\n  currentBackground: Background;\n  backgroundToggled: boolean;\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass App extends Component<any, AppState> {\n  state = {\n    dayBackground: { url: '', author: '', authorUrl: '' },\n    nightBackground: { url: '', author: '', authorUrl: '' },\n    currentBackground: { url: '', author: '', authorUrl: '' },\n    backgroundToggled: false,\n    engineType: '',\n    engineUrl: undefined,\n  };\n\n  timerId: any;\n\n  async componentDidMount() {\n    const value = localStorage.getItem('backgrounds');\n    if (value === null) {\n      await this.setState({\n        dayBackground: {\n          url: 'https://i.imgur.com/2yZEWjj.jpg',\n          author: 'Alex Knight',\n          authorUrl: 'https://unsplash.com/@agkdesign',\n        },\n        nightBackground: {\n          url: 'https://i.imgur.com/ilSeY3w.jpg',\n          author: 'Alex Knight',\n          authorUrl: 'https://unsplash.com/@agkdesign',\n        },\n      });\n\n      this.saveBackgrounds();\n    } else {\n      await this.setState(JSON.parse(value));\n    }\n\n    this.checkBackground();\n\n    this.timerId = setInterval(() => this.checkBackground(), 10 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  setBackground = (background: Background) => {\n    if (this.state.currentBackground === background) return;\n\n    this.setState({ currentBackground: background });\n    document.getElementsByTagName('body')[0].background = background.url;\n  }\n\n  toggleBackground = () => {\n    let newBackground: Background;\n\n    if (this.state.currentBackground === this.state.dayBackground) {\n      newBackground = this.state.nightBackground;\n    } else {\n      newBackground = this.state.dayBackground;\n    }\n\n    this.setState({ backgroundToggled: true });\n    this.setBackground(newBackground);\n  }\n\n  checkBackground = () => {\n    if (this.state.backgroundToggled) return;\n\n    const now = new Date();\n    let newBackground: Background;\n\n    if (now.getHours() >= 6 && now.getHours() < 18) {\n      newBackground = this.state.dayBackground;\n    } else {\n      newBackground = this.state.nightBackground;\n    }\n\n    this.setBackground(newBackground);\n  };\n\n  saveBackgrounds = () => {\n    localStorage.setItem(\n      'backgrounds',\n      JSON.stringify({\n        dayBackground: this.state.dayBackground,\n        nightBackground: this.state.nightBackground,\n      }),\n    );\n  };\n\n  setupTooltip = () => {\n    $(() => {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip();\n    });\n  };\n\n  handleTrelloReady = () => {\n    this.setupTooltip();\n  };\n\n  handleSearchEngineSave = (config: any) => {\n    this.setState(config);\n  };\n\n  handleBackgroundSave = async (\n    dayBackground: Background,\n    nightBackground: Background,\n  ) => {\n    await this.setState({ dayBackground, nightBackground });\n    await this.saveBackgrounds();\n    this.setState({ backgroundToggled: false });\n    this.checkBackground();\n  };\n\n  loadTrelloIntegration = () => {\n    const configEncoded = localStorage.getItem('trello-config');\n    if (configEncoded === null) {\n      return (\n        <TrelloIntegration\n          apiKey=\"\"\n          onReady={this.handleTrelloReady}\n        />\n      );\n    }\n    const config = JSON.parse(configEncoded);\n    return (\n      <TrelloIntegration\n        apiKey={config.apiKey}\n        onReady={this.handleTrelloReady}\n      />\n    );\n  };\n\n  render() {\n    if (this.state.currentBackground.url === '') return null;\n\n    this.setupTooltip();\n\n    return (\n      <>\n        <link rel=\"preload\" href={this.state.dayBackground.url} as=\"image\" />\n        <link rel=\"preload\" href={this.state.nightBackground.url} as=\"image\" />\n        <div id=\"header-container\">\n          <SearchBar\n            engineType={this.state.engineType}\n            engineUrl={this.state.engineUrl}\n          />\n          <BookmarkBar />\n        </div>\n        <div id=\"middle-container\">\n          <ToDoBox setupTooltip={this.setupTooltip} />\n          <GCalendarIntegration />\n          {this.loadTrelloIntegration()}\n        </div>\n        <div id=\"footer-container\">\n          <ProjectInfo />\n          <BackgroundInfo\n            toggleBackground={this.toggleBackground}\n            backgroundAuthor={this.state.currentBackground.author}\n            backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n          />\n        </div>\n        <div id=\"footer-dropdown\">\n          <div className=\"dropdown\">\n            <button\n              className=\"footer-dropdown-button\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <FontAwesomeIcon icon={faInfo} />\n            </button>\n            <div\n              className=\"dropdown-menu dropdown-menu-right\"\n              aria-labelledby=\"dropdownMenuButton\"\n            >\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <ProjectInfo />\n              </div>\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <BackgroundInfo\n                  toggleBackground={this.toggleBackground}\n                  backgroundAuthor={this.state.currentBackground.author}\n                  backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n                />\n                {' '}\n              </div>\n            </div>\n          </div>\n        </div>\n        <SearchEngineSettings onSave={this.handleSearchEngineSave} />\n        <BackgroundSettings\n          day={this.state.dayBackground}\n          night={this.state.nightBackground}\n          onSave={this.handleBackgroundSave}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport './styles/Global.scss';\nimport App from './App.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}