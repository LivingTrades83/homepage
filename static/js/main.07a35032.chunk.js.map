{"version":3,"sources":["components/SearchBar.tsx","components/BookmarkEditor.tsx","components/BookmarkEntry.tsx","components/BookmarkBar.tsx","components/TodoEntry.tsx","components/TodoBox.tsx","utils/Formater.ts","components/TrelloCard.tsx","components/TrelloSettings.tsx","components/TrelloIntegration.tsx","components/Clock.tsx","components/GCalendarSettings.tsx","components/GCalendarIntegration.tsx","components/SearchEngineSettings.tsx","components/BackgroundSettings.tsx","components/ProjectInfo.tsx","components/BackgroundInfo.tsx","App.tsx","serviceWorker.js","index.js"],"names":["SearchBar","this","props","engineType","length","name","action","engineUrl","split","icon","id","className","autoFocus","placeholder","autoComplete","type","src","alt","Component","BookmarkEditor","handleNameChange","e","setState","target","value","handleURLChange","url","handleIconChange","handleDelete","onClose","state","handleSave","trim","startsWith","onSave","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","faTimes","onChange","defaultValue","onClick","closeButtonText","BookmarkEntry","handleEdit","entry","onUpdate","onDelete","data-toggle","title","href","data-target","faPen","BookmarkBar","editable","entries","Array","saveBookmarks","localStorage","setItem","JSON","stringify","handleEditToggle","handleBookmarkDelete","bookmark","a","filter","handleBookmarkUpdate","push","handleNewBookmark","Math","random","toString","substring","window","location","reload","getEntries","slice","bookmarks","map","key","Fragment","getItem","parse","faCheck","faPlus","TodoEntry","done","edit","newText","handleDone","finishEdit","onDoneToggle","toggleEditMode","handleEditSave","preventDefault","text","onEdit","getTextComponent","onDoubleClick","onSubmit","onFocus","select","getIcon","faCheckCircle","faCircle","faTrash","TodoBox","loaded","saveTodoList","setupTooltip","handleInputKey","keyCode","$","tooltip","setTimeout","handleDoneToggle","height","width","config","animationData","checked","loop","autoplay","todo","onKeyUp","withLeadingZeroes","number","size","str","formatDate","date","getFullYear","getMonth","getDate","TrelloLabelColors","green","yellow","orange","red","purple","blue","sky","lime","pink","black","TrelloCard","parseDate","dateString","Date","getDueDate","card","due","getLabels","labels","label","style","backgroundColor","color","rel","shortUrl","data-placement","faShareSquare","TrelloSettings","apiKey","loadedApiKey","loginState","handleKeyChange","componentDidMount","handleLogin","onReady","Trello","getTrelloClient","clientVersion","apiEndpoint","authEndpoint","intentEndpoint","authorizeName","authorizeType","authorizePersist","authorizeInteractive","authorizeScopeRead","authorizeScopeWrite","authorizeScopeAccount","authorizeExpiration","authorizeOnSuccess","authorizeOnError","console","log","autoAuthorize","authorizeButton","buttonStyle","buttonColor","buttonText","TrelloIntegration","logged","trello","status","selectedList","selectedBoard","cards","boards","lists","saveHistory","loadBoards","get","res","loadLists","err","boardId","undefined","history","json","find","board","loadCards","listId","list","handleListChange","changeBy","index","indexOf","maxIndex","newIndex","handleListSelect","handleBoardSelect","getNavigator","aria-haspopup","aria-expanded","faAngleLeft","faAngleRight","showTrelloInfo","loader","handleReady","faCog","Clock","timerId","setInterval","clearInterval","hour","pad","getHours","getMinutes","getSeconds","GCalendarSettings","isSignedIn","clientId","isClientReady","handleClientIdChange","handleApiKeyChange","initClient","gapi","client","init","discoveryDocs","scope","catch","auth2","getAuthInstance","updateSigninStatus","then","listen","onLoginStatusChange","getActionButton","signOut","signIn","obj","script","document","createElement","onload","load","body","appendChild","GCalendarIntegration","events","selectedDate","colors","loadEvents","start","end","getTime","calendar","result","calendarList","items","calendarId","timeMin","toISOString","timeMax","showDeleted","singleEvents","maxResults","orderBy","event","colorId","displayTime","eventStart","dateTime","eventEnd","promises","Promise","all","getStatus","handleLoginStatusChange","listEvents","eventsByDay","Map","forEach","when","has","set","sorted","from","sort","content","b","background","foreground","summary","SearchEngineSettings","saveEngine","handleChange","handleUrlChange","BackgroundSettings","author","authorUrl","day","night","ProjectInfo","BackgroundInfo","backgroundAuthorUrl","backgroundAuthor","App","dayBackground","nightBackground","currentBackground","setBackground","now","getElementsByTagName","saveBackgrounds","handleTrelloReady","handleSearchEngineSave","handleBackgroundSave","loadTrelloIntegration","configEncoded","faInfo","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07a35032.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/SearchBar.scss\";\n\ninterface SearchBarProps {\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass SearchBar extends Component<SearchBarProps> {\n  render() {\n    if (this.props.engineType.length === 0) return null;\n\n    let name = \"\";\n    let action = \"\";\n\n    if (this.props.engineType === \"duckduckgo\") {\n      name = \"DuckDuckGO\";\n      action = \"https://duckduckgo.com\";\n    }\n\n    if (this.props.engineType === \"google\") {\n      name = \"Google\";\n      action = \"https://google.com/search\";\n    }\n\n    if (this.props.engineType === \"custom\") {\n      name = this.props.engineUrl!.split(\"//\")[1].split(\"/\")[0];\n      action = this.props.engineUrl!;\n    }\n\n    let icon = `https://external-content.duckduckgo.com/ip3/${\n      action.split(\"://\")[1].split(\"/\")[0]\n    }.ico`;\n\n    return (\n      <form action={action} id=\"search-bar-container\" className=\"homepage-card\">\n        <input autoFocus name=\"q\" placeholder={`Search at ${name}`} autoComplete=\"off\" />\n        <button type=\"submit\">\n          <img src={icon} className=\"icon\" alt={`${name} icon`} />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BookmarkEditorProps {\n  id: string;\n  onSave: Function;\n  name: string;\n  url: string;\n  icon: string;\n  closeButtonText: string;\n  onClose: Function;\n}\n\ninterface BookmarkEditorState {\n  name: string;\n  url: string;\n  icon: string;\n}\n\nclass BookmarkEditor extends Component<\n  BookmarkEditorProps,\n  BookmarkEditorState\n> {\n  componentDidMount() {\n    this.setState({\n      name: this.props.name,\n      url: this.props.url,\n      icon: this.props.icon\n    });\n  }\n\n  handleNameChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ name: (e.target as any).value });\n  };\n\n  handleURLChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ url: (e.target as any).value });\n  };\n\n  handleIconChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ icon: (e.target as any).value });\n  };\n\n  handleDelete = () => {\n    this.props.onClose({ name: this.state.name, icon: this.state.icon });\n  };\n\n  handleSave = () => {\n    if (\n      this.state.name.trim().length === 0 ||\n      this.state.url.trim().length === 0\n    ) {\n      return;\n    }\n\n    let url = this.state.url;\n    if (!url.startsWith(\"http\")) {\n      url = \"https://\" + url;\n    }\n\n    this.props.onSave({ url, name: this.state.name, icon: this.state.icon });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id={this.props.id}\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"bookmark-editor-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"bookmark-editor-modal-label\">\n                Bookmark editor\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"bookmark-settings-entry\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark name\"\n                  className=\"bookmark-entry-name\"\n                  onChange={this.handleNameChange}\n                  defaultValue={this.props.name}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark URL\"\n                  className=\"bookmark-entry-url\"\n                  onChange={this.handleURLChange}\n                  defaultValue={this.props.url}\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Bookmark icon (leave empty to use the site favicon)\"\n                  className=\"bookmark-entry-icon\"\n                  onChange={this.handleIconChange}\n                  defaultValue={this.props.icon}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={this.handleDelete}\n              >\n                {this.props.closeButtonText}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEditor;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEditor from \"./BookmarkEditor\";\n\ninterface BookmarkEntryProps {\n  id: string;\n  onUpdate: Function;\n  onDelete: Function;\n  url: string;\n  icon: string;\n  name: string;\n}\n\nclass BookmarkEntry extends Component<BookmarkEntryProps> {\n  handleEdit = () => {};\n\n  handleSave = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onUpdate(entry);\n  };\n\n  handleDelete = (entry: any) => {\n    entry.id = this.props.id;\n    this.props.onDelete(entry);\n  };\n\n  render() {\n    let icon = this.props.icon;\n\n    if (icon === \"\") {\n      icon = `https://external-content.duckduckgo.com/ip3/${\n        this.props.url.split(\"://\")[1].split(\"/\")[0]\n      }.ico`;\n    }\n\n    return (\n      <div\n        className=\"bookmark-entry\"\n        data-toggle=\"tooltip\"\n        title={this.props.name}\n      >\n        <a href={this.props.url}>\n          <img src={icon} alt={`${this.props.name} icon`} />\n        </a>\n        <div\n          className=\"bookmark-edit\"\n          data-toggle=\"modal\"\n          data-target={`#bookmark-edit-modal-${this.props.id}`}\n        >\n          <FontAwesomeIcon icon={faPen} />\n        </div>\n        <BookmarkEditor\n          id={`bookmark-edit-modal-${this.props.id}`}\n          name={this.props.name}\n          url={this.props.url}\n          icon={this.props.icon}\n          closeButtonText=\"Delete\"\n          onSave={this.handleSave}\n          onClose={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkEntry;\n","import React, { Component } from \"react\";\nimport \"../styles/BookmarkBar.scss\";\nimport BookmarkEntry from \"./BookmarkEntry\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPen, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport BookmarkEditor from \"./BookmarkEditor\";\n\ninterface BookmarkBarState {\n  editable: boolean;\n  entries: Array<any>;\n}\n\nclass BookmarkBar extends Component<any, BookmarkBarState> {\n  state = { editable: false, entries: new Array<any>() };\n\n  saveBookmarks = () => {\n    localStorage.setItem(\"bookmarks\", JSON.stringify(this.state.entries));\n  };\n\n  componentDidMount() {\n    const bookmarks = localStorage.getItem(\"bookmarks\");\n    if (bookmarks !== null) {\n      const entries = JSON.parse(bookmarks);\n      this.setState({ entries });\n    } else {\n      this.saveBookmarks();\n    }\n  }\n\n  handleEditToggle = () => {\n    this.setState({ editable: !this.state.editable });\n  };\n\n  handleBookmarkDelete = async (bookmark: any) => {\n    let entries = this.state.entries;\n    entries = entries.filter(entry => entry.id !== bookmark.id);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleBookmarkUpdate = async (bookmark: any) => {\n    let entries = this.state.entries;\n    entries = entries.filter(entry => entry.id !== bookmark.id);\n    entries.push(bookmark);\n    await this.setState({ entries });\n    this.saveBookmarks();\n  };\n\n  handleNewBookmark = (entry: any) => {\n    let id = \"\";\n    do {\n      id =\n        Math.random()\n          .toString(36)\n          .substring(2, 12) +\n        Math.random()\n          .toString(36)\n          .substring(2, 12) +\n        Math.random()\n          .toString(36)\n          .substring(2, 12) +\n        Math.random()\n          .toString(36)\n          .substring(2, 12);\n    } while (\n      // eslint-disable-next-line\n      this.state.entries.filter(entry => entry.id === id).length !== 0\n    );\n    entry.id = id;\n\n    const entries = this.state.entries;\n    entries.push(entry);\n    this.setState({ entries });\n    this.saveBookmarks();\n    window.location.reload();\n  };\n\n  getEntries = () => {\n    let entries = this.state.entries;\n\n    if (entries.length > 14) {\n      entries = entries.slice(0, 15);\n    }\n\n    const bookmarks = entries.map(bookmark => (\n      <BookmarkEntry\n        key={bookmark.id}\n        id={bookmark.id}\n        name={bookmark.name}\n        url={bookmark.url}\n        icon={bookmark.icon}\n        onUpdate={this.handleBookmarkUpdate}\n        onDelete={this.handleBookmarkDelete}\n      />\n    ));\n    if (entries.length > 14) {\n      return (\n        <React.Fragment>\n          {bookmarks}\n          <h4>...</h4>\n        </React.Fragment>\n      );\n    } else {\n      return bookmarks;\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"bookmark-bar\" className=\"homepage-card\">\n        <div\n          className={`bookmark-list ${this.state.editable ? \"editable\" : \"\"}`}\n        >\n          {this.getEntries()}\n        </div>\n        <div className=\"homepage-card-header\">\n          <div\n            id=\"bookmark-edit-toggle\"\n            className=\"homepage-card-settings-holder\"\n            onClick={this.handleEditToggle}\n            data-toggle=\"tooltip\"\n            title=\"Toggle bookmark edit mode\"\n          >\n            <FontAwesomeIcon\n              icon={this.state.editable ? faCheck : faPen}\n              className=\"homepage-card-settings\"\n            />\n          </div>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Add new bookmark\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#bookmark-add-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faPlus}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <BookmarkEditor\n          id=\"bookmark-add-modal\"\n          name=\"\"\n          url=\"\"\n          icon=\"\"\n          closeButtonText=\"Close\"\n          onSave={this.handleNewBookmark}\n          onClose={() => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookmarkBar;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faTrash, faPen } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface TodoEntryProps {\n  id: string;\n  text: string;\n  done: boolean;\n  onDelete: Function;\n  onDoneToggle: Function;\n  onEdit: Function;\n}\n\ninterface TodoEntryState {\n  done: boolean;\n  edit: boolean;\n  newText: string;\n}\n\nclass TodoEntry extends Component<TodoEntryProps, TodoEntryState> {\n  state = { done: false, edit: false, newText: \"\" };\n\n  componentDidMount() {\n    this.setState({ done: this.props.done });\n  }\n\n  handleDone = async () => {\n    if (this.state.edit) {\n      this.finishEdit();\n      return;\n    }\n    await this.setState({ done: !this.state.done });\n\n    this.props.onDoneToggle(this.props.id, this.state.done);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  };\n\n  toggleEditMode = () => {\n    this.setState({ edit: !this.state.edit });\n  }\n\n  handleEditSave = (e: React.FormEvent) => {\n    e.preventDefault();\n    this.finishEdit();\n  }\n\n  finishEdit = () => {\n    this.toggleEditMode();\n    let text = this.state.newText;\n    if (text.trim() === \"\") text = this.props.text;\n    this.props.onEdit(this.props.id, text);\n  }\n\n  getTextComponent = () => {\n    if (this.state.edit) {\n      return (\n        <div\n          className={\n            this.state.edit ? \"todo-entry-text edit\" : \"todo-entry-text\"\n          }\n          onDoubleClick={this.toggleEditMode}\n        >\n          <form onSubmit={this.finishEdit}>\n            <input autoFocus onChange={(e) => this.setState({ newText: e.target.value })} onFocus={(e) => e.target.select()} defaultValue={this.props.text} />\n          </form>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={\n            this.state.done ? \"todo-entry-text checked\" : \"todo-entry-text\"\n          }\n          onDoubleClick={this.toggleEditMode}\n        >\n          {this.props.text}\n        </div>\n      )\n    }\n  }\n\n  getIcon = () => {\n    if (this.state.edit) return faPen;\n    return this.state.done ? faCheckCircle : faCircle\n  }\n\n  render() {\n    return (\n      <div className=\"todo-entry\">\n        <div className=\"todo-entry-holder\">\n          <div\n            className=\"todo-checkbox\"\n            data-toggle=\"tooltip\"\n            title=\"Toggle done state\"\n            onClick={this.handleDone}\n          >\n            <FontAwesomeIcon\n              className={\n                this.state.done && !this.state.edit ? \"icon-checked\" : \"\"\n              }\n              icon={this.getIcon()}\n            />\n          </div>\n          {this.getTextComponent()}\n        </div>\n        <div className=\"todo-entry-actions\">\n          <div\n            className=\"todo-entry-action\"\n            data-toggle=\"tooltip\"\n            title=\"Delete entry\"\n            onClick={this.handleDelete}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoEntry;\n","import React, { Component } from \"react\";\nimport TodoEntry from \"./TodoEntry\";\nimport \"../styles/TodoBox.scss\";\nimport $ from \"jquery\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport checked from \"../assets/checked.json\";\n\ninterface TodoEntryState {\n  text: string;\n  done: boolean;\n  id: string;\n}\n\ninterface TodoBoxProps {\n  setupTooltip: Function;\n}\n\ninterface TodoBoxState {\n  entries: Array<TodoEntryState>;\n  loaded: boolean;\n}\n\nclass TodoBox extends Component<TodoBoxProps, TodoBoxState> {\n  state = { entries: new Array<TodoEntryState>(), loaded: false };\n\n  saveTodoList = () => {\n    localStorage.setItem(\"todo-list\", JSON.stringify(this.state.entries));\n    this.props.setupTooltip();\n  };\n\n  componentDidMount() {\n    const todo = localStorage.getItem(\"todo-list\");\n    if (todo !== null) {\n      const entries = JSON.parse(todo);\n      this.setState({ entries, loaded: true });\n    } else {\n      this.setState({ loaded: true });\n      this.saveTodoList();\n    }\n  }\n\n  handleInputKey = (e: React.KeyboardEvent<HTMLElement>) => {\n    if (e.keyCode === 13) {\n      const value = (e.target as any).value as string;\n\n      if (value.trim().length === 0) {\n        return;\n      }\n\n      let id = \"\";\n\n      do {\n        id =\n          Math.random()\n            .toString(36)\n            .substring(2, 12) +\n          Math.random()\n            .toString(36)\n            .substring(2, 12) +\n          Math.random()\n            .toString(36)\n            .substring(2, 12) +\n          Math.random()\n            .toString(36)\n            .substring(2, 12);\n      } while (\n        // eslint-disable-next-line\n        this.state.entries.filter(entry => entry.id === id).length !== 0\n      );\n\n      const entries = this.state.entries;\n      entries.push({ text: value, done: false, id });\n      this.setState({ entries });\n      this.saveTodoList();\n      (e.target as any).value = \"\";\n    }\n  };\n\n  handleDelete = (id: string) => {\n    $(function () {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip(\"dispose\");\n    });\n    setTimeout(async () => {\n      let entries = this.state.entries;\n      entries = entries.filter(value => value.id !== id);\n      await this.setState({ entries });\n      this.saveTodoList();\n    }, 200);\n  };\n\n  handleDoneToggle = async (id: string, done: boolean) => {\n    let entries = this.state.entries;\n    entries = entries.map(value => {\n      if (value.id === id) value.done = done;\n\n      return value;\n    });\n    await this.setState({ entries });\n    this.saveTodoList();\n  };\n\n  handleEdit = async (id: string, newText: string) => {\n    let entries = this.state.entries;\n    entries = entries.map(value => {\n      if (value.id === id) value.text = newText;\n\n      return value;\n    });\n    await this.setState({ entries });\n    this.saveTodoList();\n  }\n\n  getEntries = () => {\n    if (!this.state.loaded) return null;\n    if (this.state.entries.length === 0)\n      return (\n        <div className=\"d-flex flex-column  align-items-center\">\n          <FadeIn className=\"trello-status-container\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{\n                animationData: checked,\n                loop: false,\n                autoplay: true\n              }}\n            />\n            <h5 className=\"trello-status-text\">It's empty!</h5>\n          </FadeIn>\n        </div>\n      );\n\n    return this.state.entries.map(entry => (\n      <TodoEntry\n        onDelete={this.handleDelete}\n        onDoneToggle={this.handleDoneToggle}\n        onEdit={this.handleEdit}\n        text={entry.text}\n        done={entry.done}\n        id={entry.id}\n        key={entry.id}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div id=\"todo-box\" className=\"homepage-card\">\n        <h4>To Do:</h4>\n        <input\n          id=\"todo-new-entry\"\n          className=\"\"\n          type=\"text\"\n          placeholder=\"Add new things to your TODO\"\n          autoComplete=\"off\"\n          onKeyUp={this.handleInputKey}\n        />\n        <div>{this.getEntries()}</div>\n      </div>\n    );\n  }\n}\n\nexport default TodoBox;\n","export function withLeadingZeroes(number: number, size: number): string {\n  let str = number.toString();\n\n  while (str.length < size) {\n    str = \"0\" + str;\n  }\n  return str;\n}\n\nexport function formatDate(date: Date) {\n  return `${date.getFullYear()}-${withLeadingZeroes(\n    date.getMonth() + 1,\n    2\n  )}-${withLeadingZeroes(date.getDate(), 2)}`;\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShareSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport { formatDate } from \"../utils/Formater\";\n\nconst TrelloLabelColors = {\n  green: \"#61bd4f\",\n  yellow: \"#f2d600\",\n  orange: \"#ff9f1a\",\n  red: \"#eb5a46\",\n  purple: \"#c377e0\",\n  blue: \"#0079bf\",\n  sky: \"#00c2e0\",\n  lime: \"#51e898\",\n  pink: \"#ff78cb\",\n  black: \"#344563\"\n};\n\ninterface TrelloCardProps {\n  card: any;\n}\n\nclass TrelloCard extends Component<TrelloCardProps> {\n  parseDate = (dateString: string) => {\n    const date = new Date(Date.parse(dateString));\n    return formatDate(date);\n  };\n\n  getDueDate = (card: any) => {\n    if (card.due === null) return null;\n\n    return <div className=\"trello-card-due\">{this.parseDate(card.due)}</div>;\n  };\n\n  getLabels = (card: any) => {\n    const labels = card.labels as Array<any>;\n    if (labels.length === 0) return null;\n\n    return (\n      <div className=\"trello-card-labels\">\n        {labels.map(label => (\n          <div\n            key={label.id}\n            className=\"trello-card-label\"\n            style={{ backgroundColor: (TrelloLabelColors as any)[label.color] }}\n          >\n            {label.name}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const { card } = this.props;\n    return (\n      <div className=\"trello-card\">\n        {this.getLabels(card)}\n        <div className=\"trello-card-content\">\n          <div className=\"trello-card-name\">{card.name}</div>\n          <div className=\"trello-card-actions\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={this.props.card.shortUrl}\n              className=\"trello-card-action-anchor\"\n              data-toggle=\"tooltip\"\n              data-placement=\"left\"\n              title=\"Open card on Trello\"\n            >\n              <div className=\"trello-card-action\">\n                <FontAwesomeIcon icon={faShareSquare} />\n              </div>\n            </a>\n          </div>\n        </div>\n        {this.getDueDate(card)}\n      </div>\n    );\n  }\n}\n\nexport default TrelloCard;\n","import React, { Component } from \"react\";\nimport \"../styles/TrelloSettings.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport TrelloClient, { Trello } from \"react-trello-client\";\n\ninterface TrelloSettingsProps {\n  apiKey: string;\n  onSave: Function;\n  onReady: Function;\n}\n\ninterface TrelloSettingsState {\n  apiKey: string;\n  loadedApiKey: string;\n  /*\n  -2 = No Key\n  -1 = Key ok, no Token\n  0 = Nothing yet\n  1 = Key and Token OK, nedding Client Start\n  2 = Key, Token and Client OK\n  */\n  loginState: number;\n}\n\nclass TrelloSettings extends Component<\n  TrelloSettingsProps,\n  TrelloSettingsState\n> {\n  state = {\n    apiKey: \"\",\n    loadedApiKey: \"\",\n    loginState: 0\n  };\n\n  handleSave = () => {\n    let loginState = 0;\n\n    if (this.state.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else {\n      if (localStorage.getItem(\"trello_token\") === null) {\n        loginState = -1;\n      } else {\n        loginState = 1;\n      }\n    }\n\n    this.setState({ loadedApiKey: this.state.apiKey, loginState });\n    this.props.onSave(this.state.apiKey);\n  };\n\n  handleKeyChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ apiKey: (e.target as any).value });\n  };\n\n  componentDidMount = async () => {\n    let loginState = 0;\n\n    if (this.props.apiKey.trim().length === 0) {\n      loginState = -2;\n    } else {\n      if (localStorage.getItem(\"trello_token\") === null) {\n        loginState = -1;\n      } else {\n        loginState = 1;\n      }\n    }\n\n    await this.setState({\n      loginState,\n      apiKey: this.props.apiKey,\n      loadedApiKey: this.props.apiKey\n    });\n  };\n\n  handleLogin = () => {\n    this.props.onReady(Trello);\n  };\n\n  getTrelloClient = () => {\n    if (this.state.loginState === -2 || this.state.loginState === 0)\n      return null;\n    return (\n      <TrelloClient\n        apiKey={this.state.loadedApiKey} // Get the API key from https://trello.com/app-key/\n        clientVersion={1} // number: {1}, {2}, {3}\n        apiEndpoint=\"https://api.trello.com\" // string: \"https://api.trello.com\"\n        authEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        intentEndpoint=\"https://trello.com\" // string: \"https://trello.com\"\n        authorizeName=\"Homepage\" // string: \"React Trello Client\"\n        authorizeType=\"popup\" // string: popup | redirect\n        authorizePersist={true}\n        authorizeInteractive={true}\n        authorizeScopeRead={true} // boolean: {true} | {false}\n        authorizeScopeWrite={true} // boolean: {true} | {false}\n        authorizeScopeAccount={true} // boolean: {true} | {false}\n        authorizeExpiration=\"never\" // string: \"1hour\", \"1day\", \"30days\" | \"never\"\n        authorizeOnSuccess={this.handleLogin} // function: {() => console.log('Login successful!')}\n        authorizeOnError={() => console.log(\"Login error!\")} // function: {() => console.log('Login error!')}\n        autoAuthorize={true} // boolean: {true} | {false}\n        authorizeButton={true} // boolean: {true} | {false}\n        buttonStyle=\"metamorph\" // string: \"metamorph\" | \"flat\"\n        buttonColor=\"green\" // string: \"green\" | \"grayish-blue\" | \"light\"\n        buttonText=\"Login with Trello\" // string: \"Login with Trello\"\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"trello-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"trello-setings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"trello-settings-modal-label\">\n                Trello settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <label>\n                Login into your Trello Account and get an API key in{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://trello.com/app-key\"\n                >\n                  https://trello.com/app-key\n                </a>\n                . Then add the homepage URL to the Allowed Origins.\n              </label>\n              <input\n                defaultValue={this.state.apiKey}\n                onChange={this.handleKeyChange}\n                placeholder=\"API key (insert a value and save before login)\"\n              />\n              <div\n                id=\"trello-login-container\"\n                className={this.state.loginState !== -1 ? \"hidden\" : \"\"}\n              >\n                {this.getTrelloClient()}\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={() => window.location.reload()}\n              >\n                Close\n              </button>\n              <button\n                onClick={this.handleSave}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrelloSettings;\n","import React, { Component } from \"react\";\nimport \"../styles/TrelloIntegration.scss\";\nimport TrelloCard from \"./TrelloCard\";\nimport {\n  faCog,\n  faTimes,\n  faAngleLeft,\n  faAngleRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TrelloSettings from \"./TrelloSettings\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport loader from \"../assets/loader.json\";\nimport checked from \"../assets/checked.json\";\n\ninterface TrelloIntegrationProps {\n  apiKey: string;\n  onReady: Function;\n}\n\ninterface TrelloIntegrationState {\n  logged: boolean;\n  trello: any;\n  cards?: Array<any>;\n  boards: Array<any>;\n  lists: Array<any>;\n  selectedList: any;\n  selectedBoard: any;\n  /* \n  -1 = refreshing\n  0 = loading\n  1 = done\n  */\n  status: number;\n}\n\nclass TrelloIntegration extends Component<\n  TrelloIntegrationProps,\n  TrelloIntegrationState\n> {\n  state = {\n    logged: false,\n    trello: {} as any,\n    status: 0,\n    selectedList: {} as any,\n    selectedBoard: {} as any,\n    cards: new Array<any>(),\n    boards: new Array<any>(),\n    lists: new Array<any>()\n  };\n\n  saveHistory = () => {\n    localStorage.setItem(\n      \"trello-history\",\n      JSON.stringify({\n        selectedList: this.state.selectedList.id,\n        selectedBoard: this.state.selectedBoard.id\n      })\n    );\n  };\n\n  loadBoards = async (trello: any) => {\n    trello.get(\n      \"members/me/boards\",\n      async (res: any) => {\n        console.log(\"get boards\");\n        await this.setState({ boards: res });\n        this.loadLists(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadLists = (trello: any) => {\n    let boardId = this.state.selectedBoard.id;\n    if (boardId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedBoard === undefined) {\n          boardId = this.state.boards[0].id;\n          this.setState({ selectedBoard: this.state.boards[0] });\n        } else {\n          boardId = json.selectedBoard;\n          this.setState({\n            selectedBoard: this.state.boards.find(\n              board => board.id === json.selectedBoard\n            )\n          });\n        }\n      } else {\n        boardId = this.state.boards[0].id;\n        this.setState({ selectedBoard: this.state.boards[0] });\n      }\n    }\n    trello.get(\n      `boards/${boardId}/lists`,\n      async (res: any) => {\n        console.log(\"get lists\");\n        await this.setState({ lists: res });\n        this.loadCards(trello);\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  };\n\n  loadCards = (trello: any) => {\n    let listId = this.state.selectedList.id;\n    if (listId === undefined) {\n      const history = localStorage.getItem(\"trello-history\");\n      if (this.state.status === 0 && history !== null) {\n        const json = JSON.parse(history);\n        if (json.selectedList === undefined) {\n          listId = this.state.lists[0].id;\n          this.setState({ selectedList: this.state.lists[0] });\n        } else {\n          listId = json.selectedList;\n          this.setState({\n            selectedList: this.state.lists.find(\n              list => list.id === json.selectedList\n            )\n          });\n        }\n      } else {\n        listId = this.state.lists[0].id;\n        this.setState({ selectedList: this.state.lists[0] });\n      }\n    }\n    trello.get(\n      `lists/${listId}/cards`,\n      (res: any) => {\n        console.log(\"get cards\");\n        const cards = res;\n        this.setState({ cards, status: 1 });\n        this.props.onReady();\n      },\n      (err: any) => {\n        console.log(\"ERROR:\", err);\n        this.setState({ cards: undefined, status: 1 });\n        this.props.onReady();\n      }\n    );\n  };\n\n  handleListChange = async (changeBy: number) => {\n    const index = this.state.lists.indexOf(this.state.selectedList);\n    let maxIndex = this.state.lists.length - 1;\n    let newIndex = index + changeBy;\n    if (newIndex <= -1) newIndex = maxIndex;\n    if (newIndex > maxIndex) newIndex = 0;\n\n    await this.setState({\n      selectedList: this.state.lists[newIndex],\n      status: 0\n    });\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleListSelect = async (id: string) => {\n    await this.setState({\n      selectedList: this.state.lists.find(list => list.id === id),\n      status: -1\n    });\n    this.loadCards(this.state.trello);\n    this.saveHistory();\n  };\n\n  handleBoardSelect = async (id: string) => {\n    await this.setState({\n      selectedBoard: this.state.boards.find(board => board.id === id),\n      selectedList: {} as any,\n      status: -1\n    });\n    this.loadBoards(this.state.trello);\n    this.saveHistory();\n  };\n\n  getNavigator = () => {\n    return (\n      <>\n        <div className=\"trello-board-navigator trello-navigator\">\n          <div className=\"dropdown\">\n            <button\n              className=\"trello-dropdown-button\"\n              type=\"button\"\n              id=\"trello-boards-dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <h6 className=\"text-center\">{this.state.selectedBoard.name}</h6>\n            </button>\n            <div\n              className=\"dropdown-menu\"\n              aria-labelledby=\"trello-boards-dropdown\"\n            >\n              {this.state.boards.map(board => {\n                return (\n                  <div\n                    onClick={() => this.handleBoardSelect(board.id)}\n                    key={board.id}\n                    className=\"dropdown-item\"\n                  >\n                    {board.name}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        <div className=\"trello-list-navigator trello-navigator\">\n          <div onClick={() => this.handleListChange(-1)} className=\"icon\">\n            <FontAwesomeIcon icon={faAngleLeft} />\n          </div>\n          <div className=\"dropdown\">\n            <button\n              className=\"trello-dropdown-button\"\n              type=\"button\"\n              id=\"trello-lists-dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <h3 className=\"text-center\">{this.state.selectedList.name}</h3>\n            </button>\n            <div\n              className=\"dropdown-menu\"\n              aria-labelledby=\"trello-lists-dropdown\"\n            >\n              {this.state.lists.map(list => {\n                return (\n                  <div\n                    onClick={() => this.handleListSelect(list.id)}\n                    key={list.id}\n                    className=\"dropdown-item\"\n                  >\n                    {list.name}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <div onClick={() => this.handleListChange(+1)} className=\"icon\">\n            <FontAwesomeIcon icon={faAngleRight} />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  showTrelloInfo = () => {\n    if (this.props.apiKey.trim().length === 0)\n      return <h4>Configure Trello to sync your cards</h4>;\n\n    if (this.state.logged && this.state.status === 1) {\n      if (this.state.cards === undefined) {\n        return (\n          <div className=\"d-flex flex-column align-items-center\">\n            <FadeIn className=\"trello-status-container\">\n              <FontAwesomeIcon icon={faTimes} className=\"trello-status error\" />\n              <h5 className=\"trello-status-text\">\n                Cannot get Trello.\n                <br />\n                Check the config\n              </h5>\n            </FadeIn>\n          </div>\n        );\n      }\n\n      if (this.state.cards.length === 0) {\n        return (\n          <>\n            {this.getNavigator()}\n            <div className=\"d-flex flex-column  align-items-center\">\n              <FadeIn className=\"trello-status-container\">\n                <Lottie\n                  height=\"120px\"\n                  width=\"120px\"\n                  config={{\n                    animationData: checked,\n                    loop: false,\n                    autoplay: true\n                  }}\n                />\n                <h5 className=\"trello-status-text\">It's empty!</h5>\n              </FadeIn>\n            </div>\n          </>\n        );\n      }\n\n      return (\n        <>\n          {this.getNavigator()}\n          <div id=\"trello-cards-container\">\n            {this.state.cards.map(card => (\n              <FadeIn key={card.id}>\n                <TrelloCard card={card} />\n              </FadeIn>\n            ))}\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <FadeIn>\n          <div className=\"d-flex flex-column  align-items-center\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{ animationData: loader, loop: true, autoplay: true }}\n            />\n            <h5 className=\"trello-status-text\">Fetching Trello...</h5>\n          </div>\n        </FadeIn>\n      );\n    }\n  };\n\n  handleSave = (apiKey: string) => {\n    localStorage.setItem(\n      \"trello-config\",\n      JSON.stringify({ apiKey: apiKey.trim() })\n    );\n  };\n\n  handleReady = (trello: any) => {\n    if (this.state.logged) return;\n    this.loadBoards(trello);\n    this.setState({ logged: true, trello });\n  };\n\n  render() {\n    return (\n      <div id=\"homepage-trello\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Trello:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Trello\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#trello-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <TrelloSettings\n          apiKey={this.props.apiKey}\n          onSave={this.handleSave}\n          onReady={this.handleReady}\n        />\n        {this.showTrelloInfo()}\n      </div>\n    );\n  }\n}\n\nexport default TrelloIntegration;\n","import React, { Component } from \"react\";\nimport { formatDate, withLeadingZeroes as pad } from \"../utils/Formater\";\n\ninterface ClockState {\n  date: Date;\n}\n\nclass Clock extends Component<any, ClockState> {\n  state = { date: new Date() };\n\n  timerId?: any;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => this.setState({ date: new Date() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const hour = `${pad(date.getHours(), 2)}:${pad(date.getMinutes(), 2)}:${pad(\n      date.getSeconds(),\n      2\n    )}`;\n    return (\n      <>\n        <h6 id=\"calendar-today\">{formatDate(date)}</h6>\n        <h3 id=\"calendar-clock\">{hour}</h3>\n      </>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface GCalendarSettingsProps {\n  onLoginStatusChange: Function;\n}\n\nexport interface GCalendarSettingsState {\n  isSignedIn?: boolean;\n  isClientReady: boolean;\n  clientId: string;\n  apiKey: string;\n}\n\nclass GCalendarSettings extends Component<\n  GCalendarSettingsProps,\n  GCalendarSettingsState\n> {\n  state = {\n    isSignedIn: undefined,\n    clientId: \"\",\n    apiKey: \"\",\n    isClientReady: false\n  };\n\n  async componentDidMount() {\n    const value = localStorage.getItem(\"gcalendar-config\");\n    if (value === null) {\n      this.handleSave();\n    } else {\n      const obj = JSON.parse(value!);\n      this.setState({ apiKey: obj.apiKey, clientId: obj.clientId });\n    }\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n\n    script.onload = () => {\n      const gapi = (window as any).gapi;\n      gapi.load(\"client:auth2\", this.initClient);\n    };\n\n    document.body.appendChild(script);\n  }\n\n  handleClientIdChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ clientId: (e.target as any).value });\n  };\n\n  handleApiKeyChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ apiKey: (e.target as any).value });\n  };\n\n  initClient = () => {\n    const gapi = (window as any).gapi;\n\n    gapi.client\n      .init({\n        apiKey: this.state.apiKey,\n        clientId: this.state.clientId,\n        discoveryDocs: [\n          \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"\n        ],\n        scope: \"https://www.googleapis.com/auth/calendar.readonly\"\n      })\n      .catch(() => {\n        console.log(\"Cannot init the Calendar client.\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n          return;\n        }\n      })\n      .then(() => {\n        console.log(\"Calendar client loaded\");\n        if (gapi.auth2.getAuthInstance() === null) {\n          console.log(\"Calendar client's auth instance not found\");\n          this.updateSigninStatus(false);\n          return;\n        }\n\n        this.setState({ isClientReady: true });\n\n        gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n\n        this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n      });\n  };\n\n  updateSigninStatus = (isSignedIn: boolean) => {\n    console.log(\"The login status was chagned to\", isSignedIn);\n    this.setState({ isSignedIn });\n    this.props.onLoginStatusChange(isSignedIn);\n  };\n\n  getActionButton = (gapi: any) => {\n    if (!this.state.isClientReady) return null;\n    if (this.state.isSignedIn) {\n      return (\n        <button\n          onClick={() => gapi.auth2.getAuthInstance().signOut()}\n          className=\"btn btn-secondary\"\n        >\n          Sign out\n        </button>\n      );\n    } else {\n      return (\n        <button\n          onClick={() => gapi.auth2.getAuthInstance().signIn()}\n          className=\"btn btn-primary\"\n        >\n          Sign in with Google Account\n        </button>\n      );\n    }\n  };\n\n  handleSave = () => {\n    localStorage.setItem(\n      \"gcalendar-config\",\n      JSON.stringify({\n        clientId: this.state.clientId.trim(),\n        apiKey: this.state.apiKey.trim()\n      })\n    );\n  };\n\n  render() {\n    if (this.state.isSignedIn === undefined) return null;\n\n    const gapi = (window as any).gapi;\n\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"gcalendar-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"gcalendar-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"gcalendar-settings-modal-label\">\n                Google Calendar settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>{\" \"}\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <label>\n                Get your credentials from{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://developers.google.com/calendar/quickstart/js\"\n                >\n                  Google Developers Page\n                </a>\n                .\n              </label>\n              <input\n                defaultValue={this.state.clientId}\n                placeholder=\"Client ID\"\n                onChange={this.handleClientIdChange}\n              />\n              <input\n                defaultValue={this.state.apiKey}\n                placeholder=\"API key\"\n                onChange={this.handleApiKeyChange}\n              />\n              {this.getActionButton(gapi)}\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n                onClick={() => window.location.reload()}\n              >\n                Close\n              </button>\n              <button\n                onClick={this.handleSave}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GCalendarSettings;\n","import React, { Component } from \"react\";\nimport \"../styles/CalendarIntegration.scss\";\nimport Clock from \"./Clock\";\nimport GCalendarSettings from \"./GCalendarSettings\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport FadeIn from \"react-fade-in\";\nimport { Lottie } from \"@crello/react-lottie\";\nimport loader from \"../assets/loader.json\";\n\ninterface GCalendarIntegrationState {\n  /*\n  -1 = not logged\n  0 = loading\n  1 = logged\n  */\n  loginState: number;\n  events: Array<any>;\n  selectedDate: Date;\n}\n\nclass GCalendarIntegration extends Component<any, GCalendarIntegrationState> {\n  state = { loginState: 0, events: new Array<any>(), selectedDate: new Date() };\n  colors: any = {};\n\n  loadEvents = async (start: Date) => {\n    const gapi = (window as any).gapi;\n\n    const end = new Date(start.getTime() + 30 * 24 * 60 * 60 * 1000);\n\n    const events = new Array<any>();\n\n    // resolve colors\n    this.colors = (await gapi.client.calendar.colors.get()).result.calendar;\n\n    // resolve the calendars\n    const res = await gapi.client.calendar.calendarList.list();\n    // resolve the events for each calendar\n    const promises = await (res.result.items as Array<any>).map(\n      async calendar => {\n        const res = await gapi.client.calendar.events.list({\n          calendarId: calendar.id,\n          timeMin: start.toISOString(),\n          timeMax: end.toISOString(),\n          showDeleted: false,\n          singleEvents: true,\n          maxResults: 50,\n          orderBy: \"startTime\"\n        });\n        events.push(\n          ...res.result.items.map((event: any) => {\n            event.calendar = calendar;\n            event.colorId = calendar.colorId;\n            let displayTime = \"All day\";\n            if (event.start.date === undefined) {\n              const eventStart = event.start.dateTime.split(\"T\")[1].substring(0, 5)\n              const eventEnd = event.end.dateTime.split(\"T\")[1].substring(0, 5);\n              displayTime = `${eventStart} - ${eventEnd}`;\n            }\n            event.displayTime = displayTime;\n            return event;\n          })\n        );\n      }\n    );\n\n    await Promise.all(promises);\n\n    await this.setState({ events });\n  };\n\n  getStatus = () => {\n    if (this.state.loginState === -1)\n      return <h4>Configure Google Calendar to see future events</h4>;\n    return null;\n  };\n\n  handleLoginStatusChange = async (isSignedIn: boolean) => {\n    if (isSignedIn) {\n      await this.loadEvents(new Date());\n    }\n    this.setState({ loginState: isSignedIn ? 1 : -1 });\n  };\n\n  listEvents = () => {\n    if (this.state.loginState === -1) return null;\n    if (this.state.loginState === 0) {\n      return (\n        <FadeIn>\n          <div className=\"d-flex flex-column  align-items-center\">\n            <Lottie\n              height=\"120px\"\n              width=\"120px\"\n              config={{ animationData: loader, loop: true, autoplay: true }}\n            />\n            <h5 className=\"trello-status-text\">Fetching Google Calendar...</h5>\n          </div>\n        </FadeIn>\n      );\n    }\n\n    let eventsByDay = new Map<string, Array<any>>();\n\n    this.state.events.forEach(event => {\n      let when = event.start.date;\n      if (when === undefined) when = event.start.dateTime.split(\"T\")[0];\n\n      let events = new Array<any>();\n      if (eventsByDay.has(when)) {\n        events = eventsByDay.get(when)!;\n      }\n      events.push(event);\n      eventsByDay.set(when, events);\n    });\n\n    const sorted = Array.from(eventsByDay.entries()).sort();\n\n    let content = new Array<any>();\n    content.push(<h5 key=\"header\">Future events:</h5>);\n\n    sorted.forEach((entry: Array<any>) => {\n      const when = entry[0] as string;\n      let events = entry[1] as Array<any>;\n\n      events = events.sort((a, b) => {\n        if (a.displayTime === \"All day\") return -1;\n        if (b.displayTime === \"All day\") return 1;\n\n        if (a.displayTime < b.displayTime) return -1;\n        if (a.displayTime > b.displayTime) return 1;\n        return 0;\n      });\n\n      content.push(\n        <FadeIn key={when}>\n          <div className=\"gcalendar-events\">\n            <h6>{when}</h6>\n            {events.map(event => {\n              const color = this.colors[event.colorId];\n              return (\n                <div\n                  key={event.id}\n                  style={{\n                    backgroundColor: color.background,\n                    color: color.foreground\n                  }}\n                >{`${event.displayTime}: ${event.summary}`}</div>\n              );\n            })}\n          </div>\n        </FadeIn>\n      );\n    });\n\n    return content;\n  };\n\n  render() {\n    return (\n      <div id=\"calendar-container\" className=\"homepage-card\">\n        <div className=\"homepage-card-header\">\n          <h4>Calendar:</h4>\n          <div\n            data-toggle=\"tooltip\"\n            title=\"Setup Google Calendar\"\n            className=\"homepage-card-settings-holder\"\n          >\n            <div\n              className=\"homepage-card-settings-holder\"\n              data-toggle=\"modal\"\n              data-target=\"#gcalendar-settings-modal\"\n            >\n              <FontAwesomeIcon\n                icon={faCog}\n                className=\"homepage-card-settings\"\n              />\n            </div>\n          </div>\n        </div>\n        <Clock />\n        {this.getStatus()}\n        {this.listEvents()}\n        <GCalendarSettings onLoginStatusChange={this.handleLoginStatusChange} />\n      </div>\n    );\n  }\n}\n\nexport default GCalendarIntegration;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/SearchEngineSettings.scss\";\n\ninterface SearchEngineSettingsProps {\n  onSave: Function;\n}\n\ninterface SearchEngineSettingsState {\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass SearchEngineSettings extends Component<\n  SearchEngineSettingsProps,\n  SearchEngineSettingsState\n> {\n  state = { engineType: \"\", engineUrl: \"\" };\n\n  saveEngine = () => {\n    localStorage.setItem(\"search-engine\", JSON.stringify(this.state));\n  };\n\n  async componentDidMount() {\n    const config = localStorage.getItem(\"search-engine\");\n    if (config === null) {\n      await this.setState({ engineType: \"duckduckgo\" });\n      this.saveEngine();\n    } else {\n      const json = JSON.parse(config);\n      await this.setState({\n        engineType: json.engineType,\n        engineUrl: json.engineUrl\n      });\n    }\n    this.props.onSave(this.state);\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineType: (e.target as any).value! });\n  };\n\n  handleUrlChange = (e: React.ChangeEvent<HTMLElement>) => {\n    this.setState({ engineUrl: (e.target as any).value! });\n  };\n\n  handleSave = async () => {\n    if (\n      !this.state.engineUrl.startsWith(\"https://\") &&\n      !this.state.engineUrl.startsWith(\"http://\")\n    ) {\n      await this.setState({ engineUrl: `https://${this.state.engineUrl}` });\n    }\n    await this.saveEngine();\n    this.props.onSave(this.state);\n  };\n\n  render() {\n    if (this.state.engineType.length === 0) return null;\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"homepage-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"homepage-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"homepage-settings-modal-label\">\n                General settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div>\n                <label>Search engine</label>\n                <select\n                  id=\"search-engine\"\n                  onChange={this.handleChange}\n                  defaultValue={this.state.engineType}\n                >\n                  <option value=\"duckduckgo\">DuckDuckGO</option>\n                  <option value=\"google\">Google</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n                <input\n                  placeholder=\"Insert custom search engine URL\"\n                  defaultValue={this.state.engineUrl}\n                  onChange={this.handleUrlChange}\n                  className={`${\n                    this.state.engineType === \"custom\" ? \"\" : \"hidden\"\n                  }`}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchEngineSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundSettingsProps {\n  onSave: Function;\n  day: any;\n  night: any;\n}\n\nclass BackgroundSettings extends Component<BackgroundSettingsProps> {\n  state = {\n    \"day-url\": \"\",\n    \"day-author\": \"\",\n    \"day-authorUrl\": \"\",\n    \"night-url\": \"\",\n    \"night-author\": \"\",\n    \"night-authorUrl\": \"\"\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLElement>) => {\n    const name = (e.target as any).name;\n    const value = (e.target as any).value;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSave = () => {\n    this.props.onSave(\n      {\n        url: this.state[\"day-url\"],\n        author: this.state[\"day-author\"],\n        authorUrl: this.state[\"day-authorUrl\"]\n      },\n      {\n        url: this.state[\"night-url\"],\n        author: this.state[\"night-author\"],\n        authorUrl: this.state[\"night-authorUrl\"]\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.setState({\n      \"day-url\": this.props.day.url,\n      \"day-author\": this.props.day.author,\n      \"day-authorUrl\": this.props.day.authorUrl,\n      \"night-url\": this.props.night.url,\n      \"night-author\": this.props.night.author,\n      \"night-authorUrl\": this.props.night.authorUrl\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"background-settings-modal\"\n        tabIndex={-1}\n        role=\"dialog\"\n        aria-labelledby=\"background-settings-modal-label\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"background-settings-modal-label\">\n                Background settings\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">\n                  <FontAwesomeIcon icon={faTimes} />\n                </span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <label>Day background</label>\n              <input\n                name=\"day-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-url\"]}\n              />\n              <input\n                name=\"day-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-author\"]}\n              />\n              <input\n                name=\"day-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"day-authorUrl\"]}\n              />\n              <label>Night background</label>\n              <input\n                name=\"night-url\"\n                placeholder=\"Image URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-url\"]}\n              />\n              <input\n                name=\"night-author\"\n                placeholder=\"Author name\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-author\"]}\n              />\n              <input\n                name=\"night-authorUrl\"\n                placeholder=\"Author page URL\"\n                onChange={this.handleChange}\n                defaultValue={this.state[\"night-authorUrl\"]}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleSave}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundSettings;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ProjectInfo extends Component {\n  render() {\n    return (\n      <div className=\"footer-info\">\n        <div data-toggle=\"tooltip\" title=\"Open general settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#homepage-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n        Homepage made by{\" \"}\n        <a\n          href=\"https://github.com/Pauloo27/homepage\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Pauloo27\n        </a>{\" \"}\n        under GPL-2 license\n      </div>\n    );\n  }\n}\n\nexport default ProjectInfo;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface BackgroundInfoProps {\n  backgroundAuthor: string;\n  backgroundAuthorUrl: string;\n}\n\nclass BackgroundInfo extends Component<BackgroundInfoProps> {\n  render() {\n    return (\n      <div id=\"background-info\" className=\"footer-info\">\n        Image by{\" \"}\n        <a\n          href={this.props.backgroundAuthorUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {this.props.backgroundAuthor}\n        </a>\n        <div data-toggle=\"tooltip\" title=\"Open background settings\">\n          <div\n            className=\"homepage-card-settings-holder\"\n            data-toggle=\"modal\"\n            data-target=\"#background-settings-modal\"\n          >\n            <FontAwesomeIcon icon={faCog} className=\"homepage-card-settings\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BackgroundInfo;\n","import React, { Component } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport BookmarkBar from \"./components/BookmarkBar\";\nimport \"./styles/App.scss\";\nimport TodoBox from \"./components/TodoBox\";\nimport TrelloIntegration from \"./components/TrelloIntegration\";\nimport GCalendarIntegration from \"./components/GCalendarIntegration\";\nimport SearchEngineSettings from \"./components/SearchEngineSettings\";\nimport BackgroundSettings from \"./components/BackgroundSettings\";\nimport ProjectInfo from \"./components/ProjectInfo\";\nimport BackgroundInfo from \"./components/BackgroundInfo\";\nimport $ from \"jquery\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface Background {\n  url: string;\n  author: string;\n  authorUrl: string;\n}\n\ninterface AppState {\n  dayBackground: Background;\n  nightBackground: Background;\n  currentBackground: Background;\n  engineType: string;\n  engineUrl?: string;\n}\n\nclass App extends Component<any, AppState> {\n  state = {\n    dayBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    nightBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    currentBackground: { url: \"\", author: \"\", authorUrl: \"\" },\n    engineType: \"\",\n    engineUrl: undefined\n  };\n\n  timerId: any;\n\n  setupTooltip = () => {\n    $(function() {\n      ($('[data-toggle=\"tooltip\"]') as any).tooltip();\n    });\n  };\n\n  setBackground = () => {\n    const now = new Date();\n    let currentBackground: Background;\n\n    if (now.getHours() >= 6 && now.getHours() < 18) {\n      currentBackground = this.state.dayBackground;\n    } else {\n      currentBackground = this.state.nightBackground;\n    }\n\n    if (this.state.currentBackground === currentBackground) return;\n\n    this.setState({ currentBackground });\n    document.getElementsByTagName(\"body\")[0].background = currentBackground.url;\n  };\n\n  saveBackgrounds = () => {\n    localStorage.setItem(\n      \"backgrounds\",\n      JSON.stringify({\n        dayBackground: this.state.dayBackground,\n        nightBackground: this.state.nightBackground\n      })\n    );\n  };\n\n  async componentDidMount() {\n    const value = localStorage.getItem(\"backgrounds\");\n    if (value === null) {\n      await this.setState({\n        dayBackground: {\n          url: \"https://i.imgur.com/2yZEWjj.jpg\",\n          author: \"Alex Knight\",\n          authorUrl: \"https://unsplash.com/@agkdesign\"\n        },\n        nightBackground: {\n          url: \"https://i.imgur.com/ilSeY3w.jpg\",\n          author: \"Alex Knight\",\n          authorUrl: \"https://unsplash.com/@agkdesign\"\n        }\n      });\n\n      this.saveBackgrounds();\n    } else {\n      await this.setState(JSON.parse(value));\n    }\n\n    this.setBackground();\n\n    this.timerId = setInterval(() => this.setBackground(), 10 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  handleTrelloReady = () => {\n    this.setupTooltip();\n  };\n\n  handleSearchEngineSave = (config: any) => {\n    this.setState(config);\n  };\n\n  handleBackgroundSave = async (\n    dayBackground: Background,\n    nightBackground: Background\n  ) => {\n    await this.setState({ dayBackground, nightBackground });\n    await this.saveBackgrounds();\n    this.setBackground();\n  };\n\n  loadTrelloIntegration = () => {\n    const configEncoded = localStorage.getItem(\"trello-config\");\n    if (configEncoded === null) {\n      return (\n        <TrelloIntegration\n          apiKey={\"\"}\n          onReady={this.handleTrelloReady}\n        />\n      );\n    } else {\n      const config = JSON.parse(configEncoded);\n      return (\n        <TrelloIntegration\n          apiKey={config.apiKey}\n          onReady={this.handleTrelloReady}\n        />\n      );\n    }\n  };\n\n  render() {\n    if (this.state.currentBackground.url === \"\") return null;\n\n    this.setupTooltip();\n\n    return (\n      <>\n        <div id=\"header-container\">\n          <SearchBar\n            engineType={this.state.engineType}\n            engineUrl={this.state.engineUrl}\n          />\n          <BookmarkBar />\n        </div>\n        <div id=\"middle-container\">\n          <TodoBox setupTooltip={this.setupTooltip} />\n          <GCalendarIntegration />\n          {this.loadTrelloIntegration()}\n        </div>\n        <div id=\"footer-container\">\n          <ProjectInfo />\n          <BackgroundInfo\n            backgroundAuthor={this.state.currentBackground.author}\n            backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n          />\n        </div>\n        <div id=\"footer-dropdown\">\n          <div className=\"dropdown\">\n            <button\n              className=\"footer-dropdown-button\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <FontAwesomeIcon icon={faInfo} />\n            </button>\n            <div\n              className=\"dropdown-menu dropdown-menu-right\"\n              aria-labelledby=\"dropdownMenuButton\"\n            >\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <ProjectInfo />\n              </div>\n              <div className=\"dropdown-item footer-dropdown-item\">\n                <BackgroundInfo\n                  backgroundAuthor={this.state.currentBackground.author}\n                  backgroundAuthorUrl={this.state.currentBackground.authorUrl}\n                />{\" \"}\n              </div>\n            </div>\n          </div>\n        </div>\n        <SearchEngineSettings onSave={this.handleSearchEngineSave} />\n        <BackgroundSettings\n          day={this.state.dayBackground}\n          night={this.state.nightBackground}\n          onSave={this.handleBackgroundSave}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"./styles/Global.scss\";\nimport App from \"./App.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}